{
	"info": {
		"_postman_id": "85c90393-563e-9f9c-d442-b286add454ba",
		"name": "Swagger Tests",
		"description": "Collection para rodar testes orientados a documentação e garantir que a mesma esta atualizada",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Receita",
			"item": [
				{
					"name": "Ping serviço OK + Criar echoes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb65df57-a50f-4bef-b09e-a62ee84d295d",
								"exec": [
									"pm.environment.set(\"echoGerarReceitaID\", echoPostRequestGerarReceitaPorID = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/gerar-receita/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"  \"receitaApi\": {",
									"    \"idProdutor\": \"25160\",",
									"    \"dataEmissao\": pm.environment.get(\"timestamp\"),",
									"    \"idFazenda\": \"28534\",",
									"    \"idTalhao\": \"62343\",",
									"    \"idRT\": 10135,",
									"    \"idEmpresa\": 10132",
									"  },",
									"  \"usaFrasePadroes\": true,",
									"  \"itens\": [",
									"    {",
									"      \"codRelacao\": 50220,",
									"      \"quantidade\": 1,",
									"      \"numeroAplicacoes\": 1,",
									"      \"dose\": 100,",
									"      \"codPedidoItem\": 20,",
									"      \"calda\": 2,",
									"      \"areaAplicacao\": 0.51,",
									"      \"validarImpressao\": true,",
									"      \"codModeloReceita\": \"codmodreceita\",",
									"      \"codCultura\": 3,",
									"      \"tipoDeSolo\": null,",
									"      \"obsRecomendacoes\": \"obsrecom\",",
									"      \"obsEquipAplicacao\": \"equipaplic\"",
									"    }",
									"  ],",
									"  \"obsManejo\": \"string\",",
									"  \"obsDispEmb\": \"string\",",
									"  \"art\": 475,",
									"  \"numeroReceita\": 0})",
									"    }",
									"});",
									"",
									"pm.environment.set(\"echoImprimirReceita\", echoPostRequestImprimirReceita = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/'+pm.environment.get(\"idReceita\")+'/imprimir?formato=PDF',",
									"  method: 'GET',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  }",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a7c53322-c8a3-485e-a988-29b4f92c7b64",
								"exec": [
									"var moment = require('moment');",
									"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));",
									"",
									"pm.environment.set(\"responseTimeLimit\", 20000);",
									"",
									"postman.setGlobalVariable(\"loadUtils\", function loadUtils() {",
									"    let utils = {};",
									"",
									"    //Funções nativas",
									"    ",
									"    function randomiza(n) {",
									"        var ranNum = Math.round(Math.random()*n);",
									"        return ranNum;",
									"      }",
									"      ",
									"    function mod(dividendo,divisor) {",
									"        return Math.round(dividendo - (Math.floor(dividendo/divisor)*divisor));",
									"      }",
									"      ",
									"      ",
									"    //Funções de utilização  ",
									"      ",
									"    utils.reuseableFunction = function reuseableFunction() {",
									"",
									"        console.log(\"foobar\");",
									"    };",
									"    ",
									"    utils.gerarCPF = function gerarCPF() {",
									"          comPontos = false; // TRUE para ativar e FALSE para desativar a pontuação.",
									"        ",
									"        var n = 9;",
									"        var n1 = randomiza(n);",
									"        var n2 = randomiza(n);",
									"        var n3 = randomiza(n);",
									"        var n4 = randomiza(n);",
									"        var n5 = randomiza(n);",
									"        var n6 = randomiza(n);",
									"        var n7 = randomiza(n);",
									"        var n8 = randomiza(n);",
									"        var n9 = randomiza(n);",
									"        var d1 = n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;",
									"        d1 = 11 - ( mod(d1,11) );",
									"        if (d1>=10) d1 = 0;",
									"        var d2 = d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;",
									"        d2 = 11 - ( mod(d2,11) );",
									"        if (d2>=10) d2 = 0;",
									"        retorno = '';",
									"        if (comPontos) cpf = ''+n1+n2+n3+'.'+n4+n5+n6+'.'+n7+n8+n9+'-'+d1+d2;",
									"        else cpf = ''+n1+n2+n3+n4+n5+n6+n7+n8+n9+d1+d2;",
									"      ",
									"        return cpf;",
									"      };",
									"     ",
									"    utils.gerarEmpresa = function gerarEmpresa(){ return echoPostRequestGerarEmpresa = {",
									"  url: pm.environment.get(\"url\")+'/core/api/empresas/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"            body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify(",
									"            {",
									"   \"pessoaApi\":{",
									"      \"paisApi\":{",
									"         \"id\":31,",
									"         \"nome\":\"BRASIL\",",
									"         \"codBacen\":\"1058\",",
									"         \"codIso\":\"BRA\"",
									"      },",
									"      \"pessoaFisicaApi\":{",
									"         \"sexo\":\"M\",",
									"         \"rg\":\"23\",",
									"         \"nascimento\":\"1990-04-18T03:00:00.000Z\"",
									"      },",
									"      \"inscricaoFiscal\":cpf,",
									"      \"nome\":\"Teste Postman Empresa\",",
									"      \"email\":\"empresapostman@gmail.com\"",
									"   }",
									"}",
									"             )",
									"    }",
									"} }",
									"",
									"    utils.cancelarReceita = function cancelarReceita(id) { return echoPostRequestCancelarReceitaPorID = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/'+id,",
									"  method: 'DELETE',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"};} ",
									"",
									"    utils.gerarReceita = function gerarReceita(rt,fazenda) { ",
									"        if (rt === undefined) { rt = 10135}",
									"        if (fazenda === undefined) { fazenda = \"28534\"}",
									"        ",
									"        return echoPostRequestGerarReceitaPorID = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/gerar-receita/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"  \"receitaApi\": {",
									"    \"idProdutor\": \"25160\",",
									"    \"dataEmissao\": pm.environment.get(\"timestamp\"),",
									"    \"idFazenda\": fazenda,",
									"    \"idRT\": rt,",
									"    \"idEmpresa\": 10132",
									"  },",
									"  \"usaFrasePadroes\": true,",
									"  \"itens\": [",
									"    {",
									"      \"codRelacao\": 50220,",
									"      \"quantidade\": 1,",
									"      \"numeroAplicacoes\": 1,",
									"      \"dose\": 100,",
									"      \"codPedidoItem\": 20,",
									"      \"calda\": 2,",
									"      \"areaAplicacao\": 0.51,",
									"      \"validarImpressao\": true,",
									"      \"codModeloReceita\": \"codmodreceita\",",
									"      \"codCultura\": 3,",
									"      \"tipoDeSolo\": null,",
									"      \"obsRecomendacoes\": \"obsrecom\",",
									"      \"obsEquipAplicacao\": \"equipaplic\"",
									"    }",
									"  ],",
									"  \"obsManejo\": \"string\",",
									"  \"obsDispEmb\": \"string\",",
									"  \"art\": \"6693353-0\",",
									"  \"numeroReceita\": 0})",
									"    }",
									"}}",
									"",
									"    utils.gerarReceitaDoisProdutos = function gerarReceitaDoisProdutos(rt,fazenda) { ",
									"        if (rt === undefined) { rt = 10135}",
									"        if (fazenda === undefined) { fazenda = \"28534\"}",
									"        ",
									"        return echoPostRequestGerarReceitaPorID = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/gerar-receita/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"  \"receitaApi\": {",
									"    \"idProdutor\": \"25160\",",
									"    \"dataEmissao\": pm.environment.get(\"timestamp\"),",
									"    \"idFazenda\": fazenda,",
									"    \"idRT\": rt,",
									"    \"idEmpresa\": 10132",
									"  },",
									"  \"usaFrasePadroes\": true,",
									"  \"itens\": [",
									"    {",
									"      \"codRelacao\": 50220,",
									"      \"quantidade\": 1,",
									"      \"numeroAplicacoes\": 1,",
									"      \"dose\": 100,",
									"      \"codPedidoItem\": 20,",
									"      \"calda\": 2,",
									"      \"areaAplicacao\": 0.51,",
									"      \"validarImpressao\": true,",
									"      \"codModeloReceita\": \"codmodreceita\",",
									"      \"codCultura\": 3,",
									"      \"tipoDeSolo\": null,",
									"      \"obsRecomendacoes\": \"obsrecom\",",
									"      \"obsEquipAplicacao\": \"equipaplic\"",
									"    },",
									"    {",
									"     \"idReceita\":1,",
									"     \"codRelacao\":52890,",
									"     \"quantidade\":\"14\",",
									"     \"numeroAplicacoes\":\"1\",",
									"     \"dose\":\"100\",",
									"     \"codPedidoItem\":0,",
									"     \"calda\":\"1000\",",
									"     \"areaAplicacao\":\"14\",",
									"     \"validarImpressao\":false,",
									"     \"codCultura\":30,",
									"     \"obsRecomendacoes\":\"Pulverizar de modo a atingir as formas jovens da praga na parte inferior das folhas. Reaplicar se necessário com intervalos de 10 dias, realizando no máximo 3 aplicações durante o ciclo da cultura.\",",
									"     \"obsEquipAplicacao\":\"teste\"",
									"    }",
									"  ],",
									"  \"obsManejo\": \"string\",",
									"  \"obsDispEmb\": \"string\",",
									"  \"art\": \"6693353-0\",",
									"  \"numeroReceita\": 0})",
									"    }",
									"}}",
									"",
									"    utils.consultarReceitaId = function consultarReceitaID(id) { return echoGetRequestConsultarReceitaId = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas-consulta/'+id,",
									"  method: 'GET',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"}",
									"        ",
									"    }",
									"    ",
									"    utils.cadastrarProdutor = function cadastrarProdutor(cpf) { return echoPostRequestCadastrarProdutor = {",
									"  url: pm.environment.get(\"url\")+'/core/api/produtor-rural/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"            body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify(",
									"            {",
									"   \"tipoPessoaApi\":{",
									"      \"pessoaApi\":{",
									"         \"paisApi\":{",
									"            \"id\":31,",
									"            \"nome\":\"BRASIL\",",
									"            \"codBacen\":\"1058\",",
									"            \"codIso\":\"BRA\"",
									"         },",
									"         \"inscricaoFiscal\":cpf,",
									"         \"nome\":\"Produtor Rural Postman\",",
									"         \"pessoaFisicaApi\":{",
									"            \"sexo\":\"M\"",
									"         }",
									"      }",
									"   }",
									"}",
									"             )",
									"    }",
									"}",
									"        ",
									"        ",
									"        ",
									"    }",
									"    ",
									"    utils.cadastrarPropriedade = function cadastrarPropriedade() { return echoPostRequestCadastrarPropriedade = {",
									"  url: pm.environment.get(\"url\")+'/core/api/propriedade-rural',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"            body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify(",
									"            {",
									"   \"nome\":\"Propriedade Rural Postman\",",
									"   \"area\":12,",
									"   \"ativo\":true,",
									"   \"endereco\":{  ",
									"      \"cidade\":{  ",
									"         \"id\":3123,",
									"         \"nome\":\"Curitiba\",",
									"         \"estado\":{  ",
									"            \"id\":267,",
									"            \"uf\":\"PR\",",
									"            \"nome\":\"Paraná\",",
									"            \"pais\":{  ",
									"               \"id\":31,",
									"               \"nome\":\"BRASIL\",",
									"               \"codBacen\":\"1058\",",
									"               \"codIso\":\"BRA\"",
									"            }",
									"         },",
									"         \"detalhe\":{  ",
									"            \"id\":3123",
									"         }",
									"      },",
									"      \"cep\":\"80230010\",",
									"      \"bairro\":\"Rebouças\",",
									"      \"logradouro\":\"Avenida Sete De Setembro\",",
									"      \"principal\":true",
									"   }",
									"}",
									"             )",
									"    }",
									"}",
									"        ",
									"        ",
									"        ",
									"    } ",
									"    ",
									"    utils.buscarStatusCidasc = function buscarStatusCidasc(idReceita) { return echoPostRequestbuscarStatusCidasc = {",
									"  url: pm.environment.get(\"url\")+'/rec/api/fiscalizacao/cidasc/status/'+idReceita,",
									"  method: 'GET',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  }",
									"}",
									"    }     ",
									"    ",
									"",
									"    return utils;",
									"",
									"} + '; loadUtils();');",
									"tests['Utils initialized'] = true;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "www.agrotis.io",
							"host": [
								"www",
								"agrotis",
								"io"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar Receita",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a7de129a-a821-4d82-87a5-b625d86f4fd2",
								"exec": [
									"var moment = require('moment')",
									"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "375600e2-2935-4b8e-84e2-0ea2d01b77c6",
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    pm.expect(jsonData[0].idRT, 'Validação idRT').to.eql(Number(pm.environment.get(\"idRTdefault\")));",
									"    pm.expect(jsonData[0].idEmpresa, 'Validação idEmpresa').to.eql(10132);",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroReceita\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ART\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idProdutor\");",
									"    pm.expect(jsonData[0]).to.have.property(\"dataEmissao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cpfCnpjCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"enderecoFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cidadeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estadoFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ibgeCidadeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idFazenda\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idTalhao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeTalhao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cepFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"creaRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cpfRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"tituloProfissaoRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"status\");",
									"    pm.expect(jsonData[0]).to.have.property(\"itens\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"razaoSocialEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"logradouroEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroLogradouroEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cidadeEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estadoEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cnpjEmpresa\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"receitaApi\": {\n   \"idProdutor\": \"25160\",\n   \"dataEmissao\": {{timestamp}},\n   \"idFazenda\": \"25465\",\n   \"idTalhao\": \"39346\",\n   \"idRT\": 10135,\n   \"idEmpresa\": 10132\n },\n \"usaFrasePadroes\": true,\n \"itens\": [\n   {\n     \"codRelacao\": 50220,\n     \"quantidade\": 10,\n     \"numeroAplicacoes\": 1,\n     \"dose\": 100,\n     \"codPedidoItem\": 20,\n     \"calda\": 2,\n     \"areaAplicacao\": 0.51,\n     \"validarImpressao\": true,\n     \"codModeloReceita\": \"codmodreceita\",\n     \"codCultura\": 3,\n     \"tipoDeSolo\": null,\n     \"obsRecomendacoes\": \"obsrecom\",\n     \"obsEquipAplicacao\": \"equipaplic\"\n   },\n   {\n     \"codRelacao\": 12163,\n     \"quantidade\": 20,\n     \"numeroAplicacoes\": 1,\n     \"dose\": 100,\n     \"codPedidoItem\": 20,\n     \"calda\": 2,\n     \"areaAplicacao\": 0.51,\n     \"validarImpressao\": true,\n     \"codModeloReceita\": \"codmodreceita\",\n     \"codCultura\": 15,\n     \"tipoDeSolo\": null,\n     \"obsRecomendacoes\": \"obsrecom\",\n     \"obsEquipAplicacao\": \"equipaplic\"\n   }\n ],\n \"obsManejo\": \"string\",\n \"obsDispEmb\": \"string\",\n \"art\": \"6693353-0\",\n \"numeroReceita\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/gerar-receita/",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"gerar-receita",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar Receita - 4 items mesma relação",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a7de129a-a821-4d82-87a5-b625d86f4fd2",
								"exec": [
									"var moment = require('moment')",
									"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "375600e2-2935-4b8e-84e2-0ea2d01b77c6",
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    pm.expect(jsonData[0].idRT, 'Validação idRT').to.eql(Number(pm.environment.get(\"idRTdefault\")));",
									"    pm.expect(jsonData[0].idEmpresa, 'Validação idEmpresa').to.eql(10132);",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroReceita\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ART\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idProdutor\");",
									"    pm.expect(jsonData[0]).to.have.property(\"dataEmissao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cpfCnpjCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"enderecoFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cidadeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estadoFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ibgeCidadeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idFazenda\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idTalhao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeTalhao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cepFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"creaRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cpfRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"tituloProfissaoRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"status\");",
									"    pm.expect(jsonData[0]).to.have.property(\"itens\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"razaoSocialEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"logradouroEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroLogradouroEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cidadeEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estadoEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cnpjEmpresa\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Gerou duas receitas\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count()).to.be.equals(2);",
									"    //console.log(jsonData.count());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"receitaApi\": {\n   \"idProdutor\": \"25160\",\n   \"dataEmissao\": {{timestamp}},\n   \"idFazenda\": \"25465\",\n   \"idTalhao\": \"39346\",\n   \"idRT\": 10135,\n   \"idEmpresa\": 10132\n },\n \"usaFrasePadroes\": true,\n \"itens\": [\n{\"codRelacao\":52850,\"quantidade\":1,\"numeroAplicacoes\":1,\"dose\":100.0,\"calda\":1000.0,\"areaAplicacao\":1.00,\"codCultura\":29,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"},\n{\"codRelacao\":52850,\"quantidade\":2,\"numeroAplicacoes\":1,\"dose\":100.0,\"calda\":1000.0,\"areaAplicacao\":2.00,\"codCultura\":29,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"},\n{\"codRelacao\":52850,\"quantidade\":3,\"numeroAplicacoes\":1,\"dose\":100.0,\"calda\":1000.0,\"areaAplicacao\":3.00,\"codCultura\":29,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"},\n{\"codRelacao\":52850,\"quantidade\":4,\"numeroAplicacoes\":1,\"dose\":100.0,\"calda\":1000.0,\"areaAplicacao\":4.00,\"codCultura\":29,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"}\n ],\n \"obsManejo\": \"string\",\n \"obsDispEmb\": \"string\",\n \"art\": \"6693353-0\",\n \"numeroReceita\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/gerar-receita/",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"gerar-receita",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar Receita - Quebra de Receita",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a7de129a-a821-4d82-87a5-b625d86f4fd2",
								"exec": [
									"var moment = require('moment')",
									"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "375600e2-2935-4b8e-84e2-0ea2d01b77c6",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    pm.expect(jsonData[0].idRT, 'Validação idRT').to.eql(Number(pm.environment.get(\"idRTdefault\")));",
									"    pm.expect(jsonData[0].idEmpresa, 'Validação idEmpresa').to.eql(10132);",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroReceita\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ART\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idProdutor\");",
									"    pm.expect(jsonData[0]).to.have.property(\"dataEmissao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cpfCnpjCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"enderecoFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cidadeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estadoFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ibgeCidadeFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idFazenda\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cepFaz\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCli\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"creaRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cpfRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"tituloProfissaoRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"status\");",
									"    pm.expect(jsonData[0]).to.have.property(\"itens\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"razaoSocialEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"logradouroEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numeroLogradouroEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cidadeEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estadoEmpresa\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cnpjEmpresa\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"receitaApi\": {\n   \"idProdutor\": \"17503\",\n   \"dataEmissao\": {{timestamp}},\n   \"idFazenda\": \"17504\",\n   \"idRT\": 10135,\n   \"idEmpresa\": 10132\n },\n \"usaFrasePadroes\": true,\n \"itens\": [\n   {\"idReceita\":1469,\"codRelacao\":50405,\"quantidade\":1,\"numeroAplicacoes\":1,\"dose\":2000.0,\"calda\":120.0,\"areaAplicacao\":1.0,\"codCultura\":15,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"},\n   {\"idReceita\":1469,\"codRelacao\":50230,\"quantidade\":1,\"numeroAplicacoes\":1,\"dose\":500.0,\"calda\":200.0,\"areaAplicacao\":3.33,\"codCultura\":15,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"},\n   {\"idReceita\":1469,\"codRelacao\":12107,\"quantidade\":1,\"numeroAplicacoes\":1,\"dose\":4000.0,\"calda\":300.0,\"areaAplicacao\":0.11,\"codCultura\":106,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"},\n   {\"idReceita\":1469,\"codRelacao\":13237,\"quantidade\":1,\"numeroAplicacoes\":1,\"dose\":200.0,\"calda\":150.0,\"areaAplicacao\":5.0,\"codCultura\":15,\"obsRecomendacoes\":\"1\",\"obsEquipAplicacao\":\"1\"}\n ],\n \"obsManejo\": \"string\",\n \"obsDispEmb\": \"string\",\n \"art\": \"art23\",\n \"numeroReceita\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/gerar-receita/",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"gerar-receita",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Criar Receita por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b619819c-053c-4971-ad99-4d40a678d0cb",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"idReceita\", jsonData);",
									"",
									"(pm.response.code === 200 ? pm.test : console.log(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idProdutor\": \"25160\",\r\n    \"dataEmissao\": {{timestamp}},\r\n    \"idFazenda\": \"28534\",\r\n    \"idTalhao\": \"62343\",\r\n    \"idRT\": {{idRTdefault}},\r\n    \"idEmpresa\": 10132\r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Criar Receita por Texto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59ab8556-3de2-4921-8152-c8bef23f4834",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"idReceita\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataEmissao\": {{timestamp}},\r\n    \"cpfCnpjCli\": \"65752678404\",\r\n    \"nomeCli\": \"ABELARDO RODRIGUES OLIVEIRAA\",\r\n    \"nomeFaz\": \"Propriedade PR\",\r\n    \"enderecoFaz\": \"RUA CURITIBA, 23, CENTENÁRIO\",\r\n    \"cidadeFaz\": \"Curitiba\",\r\n    \"estadoFaz\": \"PR\",\r\n    \"ibgeCidadeFaz\": \"4106902\",\r\n    \"nomeTalhao\": \"talhao1\",\r\n    \"numeroFaz\": \"23\",\r\n    \"cepFaz\": \"80230010\",\r\n    \"idRT\": 10135,\r\n    \"razaoSocialEmpresa\": \"Empresa Teste\",\r\n    \"logradouroEmpresa\": \"Avenida Curitiba\",\r\n    \"numeroLogradouroEmpresa\": \"23\",\r\n    \"cidadeEmpresa\": \"Curitiba\",\r\n    \"estadoEmpresa\": \"Parana\",\r\n    \"cnpjEmpresa\": \"62971428000139\",\r\n    \"codLocalidadeSigenFaz\":416,\r\n    \"registroEmpresaSigen\":65\r\n    \r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Adicionar Produto a Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b385680-9eff-405c-9903-66b29cba348f",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"idItemReceita\", jsonData.detalhe.id);",
									"    pm.expect(jsonData.idRelacao, 'Validação idRelacao').to.eql(\"50220\");",
									"    pm.expect(jsonData).to.have.property(\"idPedidoItem\");",
									"    pm.expect(jsonData).to.have.property(\"diagnostico\");",
									"    pm.expect(jsonData).to.have.property(\"numeroAplicacoes\");",
									"    pm.expect(jsonData).to.have.property(\"calda\");",
									"    pm.expect(jsonData).to.have.property(\"dosagem\");",
									"    pm.expect(jsonData).to.have.property(\"diagnostico\");",
									"    pm.expect(jsonData).to.have.property(\"areaAplicacao\");",
									"    pm.expect(jsonData).to.have.property(\"obsEPI\");",
									"    pm.expect(jsonData).to.have.property(\"obsRecomendacoes\");",
									"    pm.expect(jsonData).to.have.property(\"obsModoAplicacao\");",
									"    //pm.expect(jsonData).to.have.property(\"obsManejo\");",
									"    pm.expect(jsonData).to.have.property(\"obsDisposicaoFinalEmbalagens\");",
									"    pm.expect(jsonData).to.have.property(\"obsPrimeirosSocorros\");",
									"    pm.expect(jsonData).to.have.property(\"obsMeioAmbiente\");",
									"    pm.expect(jsonData).to.have.property(\"idProblema\");",
									"    pm.expect(jsonData).to.have.property(\"idMapaProduto\");",
									"    pm.expect(jsonData).to.have.property(\"nomeComercialProd\");",
									"    pm.expect(jsonData).to.have.property(\"nomeTecnicoProd\");",
									"    pm.expect(jsonData).to.have.property(\"dose\");",
									"    pm.expect(jsonData).to.have.property(\"unidade\");",
									"    pm.expect(jsonData).to.have.property(\"clToxicologica\");",
									"    pm.expect(jsonData).to.have.property(\"intSeguranca\");",
									"    pm.expect(jsonData).to.have.property(\"obsEquipAplicacao\");",
									"    pm.expect(jsonData).to.have.property(\"idCultura\");",
									"    pm.expect(jsonData).to.have.property(\"nomeCultura\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"idReceita\": {{idReceita}},\r\n  \"codRelacao\": 50220,\r\n  \"quantidade\": 1,\r\n  \"numeroAplicacoes\": 1,\r\n  \"dose\": 100,\r\n  \"codPedidoItem\": 20,\r\n  \"calda\": 2,\r\n  \"areaAplicacao\": 0.51,\r\n  \"validarImpressao\": true,\r\n  \"codModeloReceita\": \"codmodreceita\",\r\n  \"codCultura\": 3,\r\n  \"tipoDeSolo\": null,\r\n  \"obsRecomendacoes\": \"obsrecom\",\r\n  \"obsEquipAplicacao\": \"equipaplic\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}/item",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remover produto do rascunho de Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdaa842d-9443-4e47-a0d5-9d177802f9b6",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}/item/{{idItemReceita}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}",
								"item",
								"{{idItemReceita}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancelar Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28f676a6-3708-4644-a4dc-1dc84500069f",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status, 'Validação status').to.eql(\"CANCELADA\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Concluir Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0613017c-3317-4f72-a569-61b1c2f82a3e",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].status, 'Validação status').to.eql(\"CONCLUIDA\");",
									"});",
									"",
									"",
									"let utils = eval(globals.loadUtils);",
									"//console.log(utils.cancelarReceita(pm.environment.get(\"idReceita\")));",
									"",
									"pm.sendRequest(utils.cancelarReceita(pm.environment.get(\"idReceita\")), function (err, res) {",
									"      });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cbaf867d-5389-46e8-ab3e-b68442e3ff23",
								"exec": [
									"",
									"// Example with a full fledged SDK Request",
									"const echoPostRequestCriarReceitaPorID = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"    \"idProdutor\": \"25160\",",
									"    \"dataEmissao\": pm.environment.get(\"timestamp\"),",
									"    \"idFazenda\": \"28534\",",
									"    \"idTalhao\": \"62343\",",
									"    \"art\":\"string\",",
									"    \"idRT\": pm.environment.get(\"idRTdefault\"),",
									"    \"idEmpresa\": 10132})",
									"    }",
									"};",
									"",
									"",
									"",
									"pm.sendRequest(echoPostRequestCriarReceitaPorID, function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  pm.environment.set(\"idReceita\", res.json());",
									"  ",
									"  //Rascunho request de adicionar item",
									"  const echoPostRequestAdicionarItemReceita = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/'+pm.environment.get(\"idReceita\")+'/item',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"  \"idReceita\": pm.environment.get(\"idReceita\"),",
									"  \"codRelacao\": 50220,",
									"  \"quantidade\": 5,",
									"  \"numeroAplicacoes\": 1,",
									"  \"dose\": 100,",
									"  \"codPedidoItem\": 20,",
									"  \"calda\": 2,",
									"  \"areaAplicacao\": 0.51,",
									"  \"validarImpressao\": true,",
									"  \"codModeloReceita\": \"codmodreceita\",",
									"  \"codCultura\": 3,",
									"  \"tipoDeSolo\": null,",
									"  \"obsRecomendacoes\": \"obsrecom\",",
									"  \"obsEquipAplicacao\": \"equipaplic\"})",
									"    }",
									"};",
									"  ",
									"  ",
									"  pm.sendRequest(echoPostRequestAdicionarItemReceita, function (err, res) {",
									"  console.log(err ? err : res.json());",
									"});",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}?usaFrasesPadroes=true&art=artteste",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}"
							],
							"query": [
								{
									"key": "usaFrasesPadroes",
									"value": "true"
								},
								{
									"key": "art",
									"value": "artteste"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Imprimir Receita Individual",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31393443-3edf-4ca3-9a42-a0c0036f5957",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5f53d5f5-8276-4145-bd2a-98ad90e1c753",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"",
									"pm.sendRequest(utils.gerarReceita(), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"",
									"});  "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}/imprimir?formato=PDF",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}",
								"imprimir"
							],
							"query": [
								{
									"key": "formato",
									"value": "PDF"
								}
							]
						},
						"description": "  "
					},
					"response": []
				},
				{
					"name": " Imprimir Receita em lote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "eeebcbd8-c848-4605-ab44-eb8e5e6f77f5",
								"type": "text/javascript",
								"exec": [
									"// Example with a full fledged SDK Request",
									"",
									" pm.environment.unset(\"ArrayRec\");",
									" ",
									"  ",
									"  ",
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  //pm.environment.set(\"ArrayRec\", jsonData[0].detalhe.id);",
									"  console.log(pm.environment.get(\"ArrayRec\"));",
									"  if (pm.environment.get(\"ArrayRec\") == null){",
									"    pm.environment.set(\"ArrayRec\", jsonData[0].detalhe.id);",
									"  } else { pm.environment.set(\"ArrayRec\", pm.environment.get(\"ArrayRec\")+','+jsonData[0].detalhe.id.toString()); }",
									"  ",
									"});  ",
									"    ",
									"    ",
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"  console.log(pm.environment.get(\"ArrayRec\"));",
									"  if (pm.environment.get(\"ArrayRec\") == null){",
									"    pm.environment.set(\"ArrayRec\", jsonData[0].detalhe.id);",
									"  } else { pm.environment.set(\"ArrayRec\", pm.environment.get(\"ArrayRec\")+','+jsonData[0].detalhe.id.toString()); }",
									"  ",
									"});  ",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5f2b8b62-7fdd-4ba4-958d-0af25dd9c4f8",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{{ArrayRec}}\n]"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/imprimir",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"imprimir"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vincular dados de Nota Fiscal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "06a89579-2c89-4130-b15e-8a12d58c4b47",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									"",
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"});  "
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e8188516-5008-47f3-b05c-8278786b56e7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"true\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serieNF\": \"ECF\",\r\n  \"numeroNF\": 4805265,\r\n  \"serieRS\": \"RS3\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}/vincular",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}",
								"vincular"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Receitas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc00a8a3-6b3c-41d3-bf6c-5a4de5a48595",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.qtdade, 'Não encontrou receitas').to.be.above(0);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"idRT\":null,\r\n   \"dataInicial\":\"2016-04-04\",\r\n   \"dataFinal\":{{timestamp}},\r\n   \"art\":null,\r\n   \"idEmpresa\":null,\r\n   \"receitaInicial\":null,\r\n   \"receitaFinal\":null,\r\n   \"idMapaProduto\":null,\r\n   \"idCultura\":null,\r\n   \"idProblema\":null,\r\n   \"idProdutor\":null,\r\n   \"cidade\":null,\r\n   \"filtroGenerico\":\"\",\r\n   \"status\":null,\r\n   \"limite\":1000,\r\n   \"posicaoInicial\":0\r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/listar-receitas",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"listar-receitas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consumir Receita",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "caa9bff5-6fd9-43d2-91cc-81d308a3b7a4",
								"exec": [
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    ",
									"   pm.environment.set(\"echoImprimirReceita\", echoPostRequestImprimirReceita = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/'+pm.environment.get(\"idReceita\")+'/imprimir?formato=PDF',",
									"  method: 'GET',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  }",
									"})",
									"",
									"  pm.sendRequest(pm.environment.get(\"echoImprimirReceita\"), function (err, res) {",
									"});  ",
									"    ",
									"    ",
									"});  ",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e012446d-e284-44df-8e64-efbed7c6e004",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"true\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}/consumir",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}",
								"consumir"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consumir Receita em Lote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "15d1b4b3-95b2-4742-beea-a80b5183cf39",
								"type": "text/javascript",
								"exec": [
									"  pm.environment.unset(\"ArrayRec\"); ",
									"  ",
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    ",
									"    if (pm.environment.get(\"ArrayRec\") == null){",
									"    pm.environment.set(\"ArrayRec\", jsonData[0].detalhe.id);",
									"  } else { pm.environment.set(\"ArrayRec\", pm.environment.get(\"ArrayRec\")+','+jsonData[0].detalhe.id.toString()); }",
									"    ",
									"            //Gera segunda receita",
									"              pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"          console.log(err ? err : res.json());",
									"          var jsonData = res.json();",
									"            pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"            ",
									"            if (pm.environment.get(\"ArrayRec\") == null){",
									"            pm.environment.set(\"ArrayRec\", jsonData[0].detalhe.id);",
									"            } else { pm.environment.set(\"ArrayRec\", pm.environment.get(\"ArrayRec\")+','+jsonData[0].detalhe.id.toString()); }",
									"            ",
									"                       pm.environment.set(\"echoImprimirReceita\", echoPostRequestImprimirReceita = {",
									"                       url: 'https://time4.agrotis.io/int/rec/api/receitas/imprimir',",
									"                        method: 'POST',",
									"                          header: {",
									"                            'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"                            'Content-Type':'application/json'",
									"                          },",
									"                          body: {",
									"                            mode: 'raw',",
									"                            raw: '['+pm.environment.get(\"ArrayRec\")+']'",
									"                             }",
									"                        })",
									"                        ",
									"                          pm.sendRequest(pm.environment.get(\"echoImprimirReceita\"), function (err, res) {",
									"                        });  ",
									"        ",
									"            ",
									"            });  ",
									"    ",
									"});  ",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "109e77e8-5b1d-4b39-8ebe-78b1826c0b5b",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"true\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{{ArrayRec}}\n]"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/consumir",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"consumir"
							]
						}
					},
					"response": []
				},
				{
					"name": " Vincular Pedido Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pedido\": \"P2350\",\r\n  \"quantidade\": 1,\r\n  \"qtdeEmbalagem\": 5,\r\n  \"codMapaProduto\": \"0610\",\r\n  \"idReceita\": 95240\r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/vincular/pedido",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"vincular",
								"pedido"
							]
						}
					},
					"response": []
				},
				{
					"name": "Desvincular Pedido Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/vincular/pedido?idReceita={{idReceita}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"vincular",
								"pedido"
							],
							"query": [
								{
									"key": "idReceita",
									"value": "{{idReceita}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Vincular Faturamento",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pedido\": \"P2349\",\r\n  \"numeroNF\": \"32564\",\r\n  \"serieNF\": \"S34\",\r\n  \"dataNF\": \"2018-08-29\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/vincular/faturamento",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"vincular",
								"faturamento"
							]
						}
					},
					"response": []
				},
				{
					"name": "Desvincular Faturamento",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/vincular/faturamento?idReceita=P2371&numeroNF=32701&codMapaProduto=0610",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"vincular",
								"faturamento"
							],
							"query": [
								{
									"key": "idReceita",
									"value": "P2371"
								},
								{
									"key": "numeroNF",
									"value": "32701"
								},
								{
									"key": "codMapaProduto",
									"value": "0610"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Alterar Dados de Fiscalização",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "641d3214-6833-43ec-b12f-f1139f949156",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"pm.sendRequest(utils.gerarReceita(), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"",
									"});  "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b63b23dd-edf6-44a3-9850-fbf1032d0492",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"let utils = eval(globals.loadUtils);",
									"pm.sendRequest(utils.consultarReceitaId(pm.environment.get(\"idReceita\")), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  ",
									"      (pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"        pm.expect(jsonData.enderecoFaz).to.equals(\"enderecoPropriedade\");",
									"        pm.expect(jsonData.ibgeCidadeFaz).to.equals(\"ibgeCidadePropriedade\");",
									"        pm.expect(jsonData.telefoneCli).to.equals(\"telefoneProdutor\");",
									"        pm.expect(jsonData.cepFaz).to.equals(\"cepPropriedade\");",
									"    ",
									"    });",
									"      ",
									"  ",
									"",
									"});  ",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas/{{idReceita}}/dados-fiscalizacao?telefoneProdutor=telefoneProdutor&cepPropriedade=cepPropriedade&enderecoPropriedade=enderecoPropriedade&ibgeCidadePropriedade=ibgeCidadePropriedade",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas",
								"{{idReceita}}",
								"dados-fiscalizacao"
							],
							"query": [
								{
									"key": "telefoneProdutor",
									"value": "telefoneProdutor"
								},
								{
									"key": "cepPropriedade",
									"value": "cepPropriedade"
								},
								{
									"key": "enderecoPropriedade",
									"value": "enderecoPropriedade"
								},
								{
									"key": "ibgeCidadePropriedade",
									"value": "ibgeCidadePropriedade"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configurações",
			"item": [
				{
					"name": "Obter configuração de Responsavel Tecnico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1580b0a5-b330-4cf9-9219-7eab87dd9cdb",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"detalheConfigRT\", JSON.stringify(jsonData.detalhe));",
									"console.log(pm.environment.get(\"detalheConfigRT\"));",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/agronomo/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"agronomo",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar configurações responsável técnico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9628f2f3-6142-4be2-8e97-5f49161896e2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.id, 'Validação id').to.eql(61087);",
									"    pm.expect(jsonData).to.have.property(\"idRT\");",
									"    pm.expect(jsonData).to.have.property(\"temCertificado\");",
									"    pm.expect(jsonData).to.have.property(\"temImgAssinatura\");",
									"    pm.expect(jsonData).to.have.property(\"imprimirAnexoComplementar\");",
									"    pm.expect(jsonData).to.have.property(\"imprimirFrasePadrao\");",
									"    pm.expect(jsonData).to.have.property(\"ordemCamposConsulta\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 61087,\n    \"idRT\": 1,\n    \"temCertificado\": false,\n    \"temImgAssinatura\": false,\n    \"imprimirAnexoComplementar\": true,\n    \"ordemCamposConsulta\": [2,1,3],\n    \"imprimirFrasePadrao\": true,\n    \"detalhe\": {{detalheConfigRT}}\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/agronomo/",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"agronomo",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": " Listar Vistos do Responsável Técnico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb23889c-6588-4a49-988b-bf39f0237152",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"idConfigRT\", jsonData[0].idConfiguracaoRT);",
									"    pm.environment.set(\"detalheConfigRT\", JSON.stringify(jsonData[0].detalhe));",
									"    ",
									"    pm.expect(jsonData[0]).to.have.property(\"idConfiguracaoRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"uf\");",
									"    pm.expect(jsonData[0]).to.have.property(\"visto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ultimaReceita\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/configuracoesRT/{{idRTdefault}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"configuracoesRT",
								"{{idRTdefault}}"
							]
						}
					},
					"response": []
				},
				{
					"name": " Configurar Visto Responsável Técnico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbc26e38-7a44-4a55-b4b6-e37a584e27f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property(\"idConfiguracaoRT\");",
									"    pm.expect(jsonData).to.have.property(\"uf\");",
									"    pm.expect(jsonData).to.have.property(\"visto\");",
									"    pm.expect(jsonData).to.have.property(\"ultimaReceita\");",
									"    pm.expect(jsonData).to.have.property(\"usaARTPorReceita\");",
									"    pm.expect(jsonData).to.have.property(\"receitasPorART\");",
									"    pm.expect(jsonData).to.have.property(\"receitasPorMes\");",
									"    pm.expect(jsonData).to.have.property(\"ARTAtual\");",
									"    pm.expect(jsonData).to.have.property(\"ARTSecundaria\");",
									"    pm.expect(jsonData).to.have.property(\"localEntregaPadrao\");",
									"    pm.expect(jsonData).to.have.property(\"omitirAssinaturaCliente\");",
									"    pm.expect(jsonData).to.have.property(\"enviarFiscalizacao\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"idConfiguracaoRT\": 3,\n    \"uf\": \"PR\",\n    \"visto\": \"newcrea\",\n    \"ultimaReceita\": 0,\n    \"usaARTPorReceita\": false,\n    \"receitasPorART\": 0,\n    \"receitasPorMes\": 0,\n    \"ARTAtual\": \"ART1\",\n    \"ARTSecundaria\": \"ART2\",\n    \"localEntregaPadrao\": \"Entrega na rua ...\",\n    \"omitirAssinaturaCliente\":true,\n    \"detalhe\": {{detalheConfigRT}}\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/configuracoesRT/{{idConfigRT}}/vistos",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"configuracoesRT",
								"{{idConfigRT}}",
								"vistos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Carregar Visto Responsável Técnico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14981054-5900-4ea8-8da8-d72d6cafbebc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property(\"idConfiguracaoRT\");",
									"    pm.expect(jsonData).to.have.property(\"uf\");",
									"    pm.expect(jsonData).to.have.property(\"visto\");",
									"    pm.expect(jsonData).to.have.property(\"ultimaReceita\");",
									"    pm.expect(jsonData).to.have.property(\"usaARTPorReceita\");",
									"    pm.expect(jsonData).to.have.property(\"receitasPorART\");",
									"    pm.expect(jsonData).to.have.property(\"receitasPorMes\");",
									"    pm.expect(jsonData).to.have.property(\"ARTAtual\");",
									"    pm.expect(jsonData).to.have.property(\"ARTSecundaria\");",
									"    pm.expect(jsonData).to.have.property(\"localEntregaPadrao\");",
									"    pm.expect(jsonData).to.have.property(\"omitirAssinaturaCliente\");",
									"    pm.expect(jsonData).to.have.property(\"enviarFiscalizacao\");",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/configuracoesRT/{{idConfigRT}}/vistos?uf=PR&visto=newcrea",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"configuracoesRT",
								"{{idConfigRT}}",
								"vistos"
							],
							"query": [
								{
									"key": "uf",
									"value": "PR"
								},
								{
									"key": "visto",
									"value": "newcrea"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": " Configurar ART por Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57594abc-fd70-48e9-9d29-a7e82e23f154",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ART\": \"12345\",\r\n  \"receitaInicial\": 1,\r\n  \"receitaAtual\": 4,\r\n  \"receitaFinal\": 10,\r\n  \"idRT\": {{idRTdefault}},\r\n  \"visto\": \"3235PR\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/receita-por-art",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"receita-por-art"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca uma confguração de ART por Receita de um Responsavel Tecnico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2f7cd0e-32f1-4450-a8c8-9447b7f37b30",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    var id = jsonData[0].detalhe.id;",
									"    pm.environment.set(\"idReceitaPorArt\", id);",
									"    pm.expect(jsonData[0]).to.have.property(\"ART\");",
									"    pm.expect(jsonData[0]).to.have.property(\"receitaInicial\");",
									"    pm.expect(jsonData[0]).to.have.property(\"receitaFinal\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idRT\");",
									"    pm.expect(jsonData[0]).to.have.property(\"visto\");",
									"",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/receita-por-art/{{idRTdefault}}?visto=3235PR",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"receita-por-art",
								"{{idRTdefault}}"
							],
							"query": [
								{
									"key": "visto",
									"value": "3235PR"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleta um bloco de ART de uma configuração de ART por Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "755a165f-7008-4b3a-9d57-45a391b6918f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/rec/api/configuracoes/receita-por-art/{{idReceitaPorArt}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"configuracoes",
								"receita-por-art",
								"{{idReceitaPorArt}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Consultas Receita",
			"item": [
				{
					"name": "Carrega os cinco últimos produtos utilizados em receita",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8346ea4f-799f-40a1-922a-a43c2a6a4614",
								"type": "text/javascript",
								"exec": [
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  ",
									"  pm.environment.set(\"idItemReceita\", jsonData[0].itens[0].detalhe.id)",
									"  //console.log(jsonData[0].itens[0].detalhe.id);",
									"});  "
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "32f0094c-59a7-4278-b85f-36bf3c5ccc23",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].cultura);",
									"    pm.expect(jsonData[0].idItemReceita, 'idItemReceita').to.eql(Number(pm.environment.get(\"idItemReceita\")));",
									"    pm.expect(jsonData[0].cultura).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0].cultura).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].cultura).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0].problema).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData[0].problema).to.have.property(\"nomeVulgar\");",
									"    pm.expect(jsonData[0].problema).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0].produto).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0].produto).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].produto).to.have.property(\"nomeTecnico\");",
									"    pm.expect(jsonData[0].idRelacao, 'idRelacao').to.eql(\"50220\");",
									"    //pm.expect(jsonData[0]).to.have.property(\"estadosRestricao\");",
									" ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/ultimas-receitas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"ultimas-receitas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Retorna o PDF do Anexo Complementar - Por MAPA Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a541f17-a54b-418b-88bc-e90180d76faf",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/emitir-anexo-complementar?codMapaProduto=6715",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"emitir-anexo-complementar"
							],
							"query": [
								{
									"key": "codMapaProduto",
									"value": "6715"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Retorno dados de complemento Nota Fiscal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf2780d8-00d8-4ea7-b614-47a535d3321d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData[0]).to.have.property(\"codProduto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"descricaoNF\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codMapaProduto\");",
									"",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"codMapaProduto\": [\"2003\",\"11516\"],\r\n  \"elementos\": [\"NomeEmbarque\",\"PrincipioAtivo\",\"NumeroRisco\",\"NumeroOnu\",\"GrupoEmbalagem\",\"Classe\",\"RegistroDiprof\",\"ClasseToxicologica\"]\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/produto-nf",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"produto-nf"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca Todos os Produtos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Produtos por Cultura e Problema (Sem armazenar Cache)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "774d0411-6b0a-4dc7-926d-2051bc360b80",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData[0]).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeTecnico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"principioAtivo\");",
									"    pm.expect(jsonData[0]).to.have.property(\"fabricante\");",
									"    pm.expect(jsonData[0].fabricante).to.have.property(\"razaoSocial\");",
									"    pm.expect(jsonData[0]).to.have.property(\"simboloClasseToxicologica\");",
									"    pm.expect(jsonData[0]).to.have.property(\"grupoQuimico\");",
									"    ",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"codCultura\": 3,\r\n  \"estado\": \"PR\",\r\n  \"codProblema\": [\r\n    405\r\n  ],\r\n  \"filtrarTodosProblemas\": false\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Relações agronômicas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d02fd15f-8f85-4f1f-a7e4-59343fa905a1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codRelacao\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"produto\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"cultura\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"problema\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codMetodoAplicacao\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"metodoAplicacao\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"liberadaParaUso\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codLocalCultura\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"localCultura\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codEstagioCultura\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"estagioCultura\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"codEstagioProblema\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"estagioProblema\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"labelDosagem\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"labelUnidade\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"labelNumAplic\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"orientacaoDosagem\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"orientacaoCalda\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"doseMinima\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"doseMaxima\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"calda\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"temArea\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"modoAplicacao\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"descTipoDosagem\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"intervaloSeguranca\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"labelUnidadePlural\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"numMaxAplic\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"numMinAplic\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"classifTox\");",
									"    pm.expect(jsonData.relacao[0]).to.have.property(\"fatorArea\");",
									"    ",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"codMapaProduto\": 03893,\r\n  \"codCultura\": 30,\r\n  \"codProblema\": [\r\n    25\r\n  ],\r\n  \"filtrarTodosProblemas\": false,\r\n  \"gerarPDFDetalhado\": false,\r\n  \"ufSigla\": \"PR\",\r\n  \"listarRelacoesRestritas\": false\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/listar-relacao",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"listar-relacao"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Paginado",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1d0b79c-f8fe-47ce-94ec-c8c83fc56718",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData[0]).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeTecnico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"principioAtivo\");",
									"    pm.expect(jsonData[0]).to.have.property(\"fabricante\");",
									"    pm.expect(jsonData[0].fabricante).to.have.property(\"razaoSocial\");",
									"    pm.expect(jsonData[0]).to.have.property(\"simboloClasseToxicologica\");",
									"    pm.expect(jsonData[0]).to.have.property(\"grupoQuimico\");",
									"",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/listar-paginado?limite=10&filtro=Abamectin&codCultura=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"listar-paginado"
							],
							"query": [
								{
									"key": "limite",
									"value": "10"
								},
								{
									"key": "filtro",
									"value": "Abamectin"
								},
								{
									"key": "codCultura",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Relação especifica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee493a64-b20f-45ca-b718-97de0111ecf4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property(\"codRelacao\");",
									"    pm.expect(jsonData).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData).to.have.property(\"produto\");",
									"    pm.expect(jsonData).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData).to.have.property(\"cultura\");",
									"    pm.expect(jsonData).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData).to.have.property(\"problema\");",
									"    pm.expect(jsonData).to.have.property(\"codMetodoAplicacao\");",
									"    pm.expect(jsonData).to.have.property(\"metodoAplicacao\");",
									"    pm.expect(jsonData).to.have.property(\"liberadaParaUso\");",
									"    pm.expect(jsonData).to.have.property(\"codLocalCultura\");",
									"    pm.expect(jsonData).to.have.property(\"localCultura\");",
									"    pm.expect(jsonData).to.have.property(\"codEstagioCultura\");",
									"    pm.expect(jsonData).to.have.property(\"estagioCultura\");",
									"    pm.expect(jsonData).to.have.property(\"codEstagioProblema\");",
									"    pm.expect(jsonData).to.have.property(\"estagioProblema\");",
									"    pm.expect(jsonData).to.have.property(\"labelDosagem\");",
									"    pm.expect(jsonData).to.have.property(\"labelUnidade\");",
									"    pm.expect(jsonData).to.have.property(\"labelNumAplic\");",
									"    pm.expect(jsonData).to.have.property(\"orientacaoDosagem\");",
									"    pm.expect(jsonData).to.have.property(\"orientacaoCalda\");",
									"    pm.expect(jsonData).to.have.property(\"doseMinima\");",
									"    pm.expect(jsonData).to.have.property(\"doseMaxima\");",
									"    pm.expect(jsonData).to.have.property(\"calda\");",
									"    pm.expect(jsonData).to.have.property(\"temArea\");",
									"    pm.expect(jsonData).to.have.property(\"modoAplicacao\");",
									"    pm.expect(jsonData).to.have.property(\"descTipoDosagem\");",
									"    pm.expect(jsonData).to.have.property(\"intervaloSeguranca\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"labelUnidadePlural\");",
									"    pm.expect(jsonData).to.have.property(\"numMaxAplic\");",
									"    pm.expect(jsonData).to.have.property(\"numMinAplic\");",
									"    pm.expect(jsonData).to.have.property(\"classifTox\");",
									"    pm.expect(jsonData).to.have.property(\"fatorArea\");",
									"",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"codRelacao\": 52850,\r\n  \"codTipoSolo\": 0,\r\n  \"codCultura\": 29\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/consultar-relacao/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"consultar-relacao",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Diagnóstico Siagro",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/diagnostico-siagro/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"diagnostico-siagro",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": " Consultar um Produto por Código Mapa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20a814b6-4e6f-488b-8143-9258a2ce9f58",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData).to.have.property(\"nomeTecnico\");",
									"    pm.expect(jsonData).to.have.property(\"principioAtivo\");",
									"    pm.expect(jsonData.principioAtivo[0]).to.have.property(\"nome\");",
									"    pm.expect(jsonData.principioAtivo[0]).to.have.property(\"percentual\");",
									"    pm.expect(jsonData).to.have.property(\"codigoSiagroPR\");",
									"    pm.expect(jsonData).to.have.property(\"fabricante\");",
									"    pm.expect(jsonData.fabricante).to.have.property(\"codFabricante\");",
									"    pm.expect(jsonData.fabricante).to.have.property(\"razaoSocial\");",
									"    pm.expect(jsonData).to.have.property(\"epi\");",
									"    pm.expect(jsonData).to.have.property(\"precaucaoUso\");",
									"    pm.expect(jsonData).to.have.property(\"primeirosSocorros\");",
									"    pm.expect(jsonData).to.have.property(\"advMeioAmbiente\");",
									"    pm.expect(jsonData).to.have.property(\"simboloClasseToxicologica\");",
									"    pm.expect(jsonData).to.have.property(\"antidotoTratamento\");",
									"    pm.expect(jsonData).to.have.property(\"tipoFormulacao\");",
									"",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/6715",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"6715"
							]
						},
						"description": "\t\t"
					},
					"response": []
				},
				{
					"name": "Verifica a Restrição de um Produto no Estado",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e0e1c41-a0eb-4eed-9720-648a4e80a331",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"codRelacao\": 23553,\r\n  \"estado\": \"PR\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/verificar-restricao",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"verificar-restricao"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Produtos Liberados Por Estado",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b886c08e-5ac3-4977-86fd-74c53b21a80a",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].culturasLiberadas[0]).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0].culturasLiberadas[0]).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].culturasLiberadas[0]).to.have.property(\"nomeCientifico\");",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/produtos-liberados/?uf=PR",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"produtos-liberados",
								""
							],
							"query": [
								{
									"key": "uf",
									"value": "PR"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fichas Emergencia Por Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b611c9f6-99de-4e89-9e43-af96a3187016",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/emitir-ficha-emergencia-por-produto?codMapaProduto=10911&expedidorNome=Nome do Expedidor&expedidorEndereco=Rua do Expedidor&expedidorTelefone=Telefone do Expedidor&expedidorCidade=Cidade do Expedidor&expedidorUf=UF do Expedidor&semTarja=false",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"emitir-ficha-emergencia-por-produto"
							],
							"query": [
								{
									"key": "codMapaProduto",
									"value": "10911"
								},
								{
									"key": "expedidorNome",
									"value": "Nome do Expedidor"
								},
								{
									"key": "expedidorEndereco",
									"value": "Rua do Expedidor"
								},
								{
									"key": "expedidorTelefone",
									"value": "Telefone do Expedidor"
								},
								{
									"key": "expedidorCidade",
									"value": "Cidade do Expedidor"
								},
								{
									"key": "expedidorUf",
									"value": "UF do Expedidor"
								},
								{
									"key": "semTarja",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta a lista de fabricantes cadastrados no sistema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30f71a10-a0d6-4371-a73c-fe0fc392de83",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codFabricante\");",
									"    pm.expect(jsonData[0]).to.have.property(\"razaoSocial\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/fabricantes/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"fabricantes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Lista métodos de aplicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "807d9aa6-c439-44e1-bab4-8610394d210a",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codMetodoAplicacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"descricao\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/metodos-aplicacao/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"metodos-aplicacao",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": " Calcula a area de aplicação do Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d325e9d-d696-4493-b016-2ee1bf283dd5",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData).to.have.property(\"descTipoDosagem\");",
									"    pm.expect(jsonData).to.have.property(\"quantidade\");",
									"    pm.expect(jsonData).to.have.property(\"dosagem\");",
									"    pm.expect(jsonData).to.have.property(\"numeroAplicacoes\");",
									"    pm.expect(jsonData).to.have.property(\"calda\");",
									"    pm.expect(jsonData).to.have.property(\"area\");",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"descTipoDosagem\": \"mL/ha\",\r\n  \"quantidade\": 20,\r\n  \"dosagem\": 2000,\r\n  \"numeroAplicacoes\": 1,\r\n  \"calda\": 1000,\r\n  \"area\": 10\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/metodos-aplicacao/calcular-area/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"metodos-aplicacao",
								"calcular-area",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta relações x restrição",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d8115c5-08ea-4665-b0f7-9bbb1abf839a",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codRelacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"produto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"problema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codMetodoAplicacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"metodoAplicacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"liberadaParaUso\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codLocalCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"localCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codEstagioCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estagioCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codEstagioProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estagioProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelDosagem\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelUnidade\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelNumAplic\");",
									"    pm.expect(jsonData[0]).to.have.property(\"orientacaoDosagem\");",
									"    pm.expect(jsonData[0]).to.have.property(\"orientacaoCalda\");",
									"    pm.expect(jsonData[0]).to.have.property(\"doseMinima\");",
									"    pm.expect(jsonData[0]).to.have.property(\"doseMaxima\");",
									"    pm.expect(jsonData[0]).to.have.property(\"calda\");",
									"    pm.expect(jsonData[0]).to.have.property(\"temArea\");",
									"    pm.expect(jsonData[0]).to.have.property(\"modoAplicacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"descTipoDosagem\");",
									"    pm.expect(jsonData[0]).to.have.property(\"intervaloSeguranca\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelUnidadePlural\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numMaxAplic\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numMinAplic\");",
									"    pm.expect(jsonData[0]).to.have.property(\"classifTox\");",
									"    pm.expect(jsonData[0]).to.have.property(\"fatorArea\");",
									"    pm.expect(jsonData[0]).to.have.property(\"temCalda\");",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/relacoes/?codCultura=31&codProduto=03809&codProblema=1521",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"relacoes",
								""
							],
							"query": [
								{
									"key": "codCultura",
									"value": "31"
								},
								{
									"key": "codProduto",
									"value": "03809"
								},
								{
									"key": "codProblema",
									"value": "1521"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta relações x restrição em lote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49ff91e7-189e-48ce-9e91-5b817d83479e",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codRelacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"produto\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"problema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codMetodoAplicacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"metodoAplicacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"liberadaParaUso\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codLocalCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"localCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codEstagioCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estagioCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codEstagioProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estagioProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelDosagem\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelUnidade\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelNumAplic\");",
									"    pm.expect(jsonData[0]).to.have.property(\"orientacaoDosagem\");",
									"    pm.expect(jsonData[0]).to.have.property(\"orientacaoCalda\");",
									"    pm.expect(jsonData[0]).to.have.property(\"doseMinima\");",
									"    pm.expect(jsonData[0]).to.have.property(\"doseMaxima\");",
									"    pm.expect(jsonData[0]).to.have.property(\"calda\");",
									"    pm.expect(jsonData[0]).to.have.property(\"temArea\");",
									"    pm.expect(jsonData[0]).to.have.property(\"modoAplicacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"descTipoDosagem\");",
									"    pm.expect(jsonData[0]).to.have.property(\"intervaloSeguranca\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData[0]).to.have.property(\"labelUnidadePlural\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numMaxAplic\");",
									"    pm.expect(jsonData[0]).to.have.property(\"numMinAplic\");",
									"    pm.expect(jsonData[0]).to.have.property(\"classifTox\");",
									"    pm.expect(jsonData[0]).to.have.property(\"fatorArea\");",
									"    pm.expect(jsonData[0]).to.have.property(\"culturaApi\");",
									"    pm.expect(jsonData[0].culturaApi).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0].culturaApi).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].culturaApi).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"produtoApi\");",
									"    pm.expect(jsonData[0].produtoApi).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0].produtoApi).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].produtoApi).to.have.property(\"nomeTecnico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"problemaApi\");",
									"    pm.expect(jsonData[0].problemaApi).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData[0].problemaApi).to.have.property(\"nomeVulgar\");",
									"    pm.expect(jsonData[0].problemaApi).to.have.property(\"nomeCientifico\");",
									"    ",
									"",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"codRelacao\": 50220,\n        \"codCultura\": 3\n    }\n]"
						},
						"url": {
							"raw": "{{url}}/fito/api/relacoes/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"relacoes",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Problemas",
			"item": [
				{
					"name": "Consulta um Problema através do seu Código",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68aea2f8-3331-4862-8a46-3cc7bfa7dbc0",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData).to.have.property(\"nomeVulgar\");",
									"    pm.expect(jsonData).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData).to.have.property(\"codigoSiagroPR\");",
									"    pm.expect(jsonData).to.have.property(\"nomeFamilia\");",
									"    pm.expect(jsonData).to.have.property(\"nomeOrdem\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/problemas/1304",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"problemas",
								"1304"
							]
						}
					},
					"response": []
				},
				{
					"name": " Listar todos os Problemas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2c65691-1b8f-476a-8902-19e342751d9a",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeVulgar\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codigoSiagroPR\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeFamilia\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeOrdem\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/problemas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"problemas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Problemas por Produto e Cultura (Sem armazenar Cache)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0671dbae-aa4c-4b01-ab03-fc99dd5679c4",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codProblema\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeVulgar\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeFamilia\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeOrdem\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"codMapaProduto\": \"6715\",\r\n  \"estado\": \"PR\",\r\n  \"codCultura\": 3\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/problemas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"problemas",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Culturas",
			"item": [
				{
					"name": " Consultar Cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c02da7f-f5d2-4f11-9669-3e4203d839df",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData).to.have.property(\"codigoSiagroPR\");",
									"    pm.expect(jsonData).to.have.property(\"creaSc\");",
									"    pm.expect(jsonData).to.have.property(\"nomeFamilia\");",
									"    pm.expect(jsonData).to.have.property(\"formasConducao\");",
									"    pm.expect(jsonData).to.have.property(\"variedades\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/culturas/29",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"culturas",
								"29"
							]
						}
					},
					"response": []
				},
				{
					"name": " Lista Todas as Culturas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba35f29a-674b-4bad-b4bf-0eef6ea932c4",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"codigoSiagroPR\");",
									"    pm.expect(jsonData[0]).to.have.property(\"creaSc\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeFamilia\");",
									"    pm.expect(jsonData[0]).to.have.property(\"formasConducao\");",
									"    pm.expect(jsonData[0].formasConducao[0]).to.have.property(\"codFcCultura\");",
									"    pm.expect(jsonData[0].formasConducao[0]).to.have.property(\"descricao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"variedades\");",
									"    pm.expect(jsonData[0].variedades[0]).to.have.property(\"codVarCultura\");",
									"    pm.expect(jsonData[0].variedades[0]).to.have.property(\"nome\");",
									"",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/culturas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"culturas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Consulta culturas por Produto e Problema (Sem armazenar Cache)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "667c753f-1d46-4139-9d1f-3fef330e2032",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomeFamilia\");",
									"    pm.expect(jsonData[0]).to.have.property(\"formasConducao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"variedades\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"codMapaProduto\": \"6715\",\r\n  \"estado\": \"PR\",\r\n  \"codProblema\": [\r\n    405\r\n  ],\r\n  \"filtrarTodosProblemas\": true\r\n}"
						},
						"url": {
							"raw": "{{url}}/fito/api/culturas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"culturas",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Utilitários",
			"item": [
				{
					"name": "Serviço para consultar versão da base Agronômica",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "386b5e77-0135-4fbc-9b39-dee0804d2e6a",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData).to.have.property(\"versao\");",
									"    pm.expect(jsonData).to.have.property(\"dataLiberacao\");",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/utilitarios/consultar-versao-local",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"utilitarios",
								"consultar-versao-local"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RecRelatorios",
			"item": [
				{
					"name": "Retorna o PDF do Anexo Complementar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9f01d37-b732-479f-85f9-d4afbbe25945",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/emitir-anexo-complementar?codReceita=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"emitir-anexo-complementar"
							],
							"query": [
								{
									"key": "codReceita",
									"value": "1"
								},
								{
									"key": "codMapaProduto ",
									"value": "1",
									"disabled": true
								},
								{
									"key": "nrReceita",
									"value": "1",
									"disabled": true
								},
								{
									"key": "nomeRt",
									"value": "1",
									"disabled": true
								},
								{
									"key": "creaRt",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Emitir Ficha de Emergencia por Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b7eadb5-24bb-46eb-a313-45be15fd7d2f",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/emitir-fichas-emergencia?codReceita=89068&semTarja=false",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"emitir-fichas-emergencia"
							],
							"query": [
								{
									"key": "codReceita",
									"value": "89068"
								},
								{
									"key": "semTarja",
									"value": "false"
								}
							]
						},
						"description": "\t"
					},
					"response": []
				},
				{
					"name": "Emitir Ficha de Emergencia por Receita",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af285e95-c31e-48d0-831a-a832ad5084ba",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/fito/api/produtos/emitir-ficha-emergencia-por-produto?semTarja=false&codMapaProduto=6615&expedidorNome=Empresa%20QA%201234@",
							"host": [
								"{{url}}"
							],
							"path": [
								"fito",
								"api",
								"produtos",
								"emitir-ficha-emergencia-por-produto"
							],
							"query": [
								{
									"key": "semTarja",
									"value": "false"
								},
								{
									"key": "codMapaProduto",
									"value": "6615"
								},
								{
									"key": "expedidorNome",
									"value": "Empresa%20QA%201234@"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Emitir Ficha de Emergencia Verso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1563b6b3-8f40-4a3b-b726-60da9b4a171c",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/emitir-ficha-emergencia-verso",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"emitir-ficha-emergencia-verso"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar Arquivo Siagro",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dfd5177b-f460-445b-ae0c-5479bbe3b843",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"text/csv\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://time4.agrotis.io/int/rec/api/receitas-consulta/gerar-arquivo-siagro?idRT=10135&dataInicial=2018-08-08&dataFinal=2018-08-10",
							"protocol": "https",
							"host": [
								"time4",
								"agrotis",
								"io"
							],
							"path": [
								"int",
								"rec",
								"api",
								"receitas-consulta",
								"gerar-arquivo-siagro"
							],
							"query": [
								{
									"key": "idRT",
									"value": "10135"
								},
								{
									"key": "dataInicial",
									"value": "2018-08-08"
								},
								{
									"key": "dataFinal",
									"value": "2018-08-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar receita por Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02f5f69f-f9e9-4a42-94f1-62253d6fe748",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData).to.have.property(\"numeroReceita\");",
									"    pm.expect(jsonData).to.have.property(\"ART\");",
									"    pm.expect(jsonData).to.have.property(\"clasCultSC\");",
									"    pm.expect(jsonData).to.have.property(\"idProdutor\");",
									"    pm.expect(jsonData).to.have.property(\"dataEmissao\");",
									"    pm.expect(jsonData).to.have.property(\"cpfCnpjCli\");",
									"    pm.expect(jsonData).to.have.property(\"nomeCli\");",
									"    pm.expect(jsonData).to.have.property(\"nomeFaz\");",
									"    pm.expect(jsonData).to.have.property(\"enderecoFaz\");",
									"    pm.expect(jsonData).to.have.property(\"cidadeFaz\");",
									"    pm.expect(jsonData).to.have.property(\"estadoFaz\");",
									"    pm.expect(jsonData).to.have.property(\"ibgeCidadeFaz\");",
									"    pm.expect(jsonData).to.have.property(\"idFazenda\");",
									"    pm.expect(jsonData).to.have.property(\"telefoneCli\");",
									"    pm.expect(jsonData).to.have.property(\"numeroFaz\");",
									"    pm.expect(jsonData).to.have.property(\"cepFaz\");",
									"    pm.expect(jsonData).to.have.property(\"idRT\");",
									"    pm.expect(jsonData).to.have.property(\"nomeRT\");",
									"    pm.expect(jsonData).to.have.property(\"creaRT\");",
									"    pm.expect(jsonData).to.have.property(\"cpfRT\");",
									"    pm.expect(jsonData).to.have.property(\"tituloProfissaoRT\");",
									"    pm.expect(jsonData).to.have.property(\"status\");",
									"    pm.expect(jsonData).to.have.property(\"itens\");",
									"    pm.expect(jsonData).to.have.property(\"idEmpresa\");",
									"    pm.expect(jsonData).to.have.property(\"razaoSocialEmpresa\");",
									"    pm.expect(jsonData).to.have.property(\"logradouroEmpresa\");",
									"    pm.expect(jsonData).to.have.property(\"numeroLogradouroEmpresa\");",
									"    pm.expect(jsonData).to.have.property(\"cidadeEmpresa\");",
									"    pm.expect(jsonData).to.have.property(\"estadoEmpresa\");",
									"    pm.expect(jsonData).to.have.property(\"cnpjEmpresa\");",
									"",
									"",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/{{idReceita}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"{{idReceita}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ultimas Receitas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "edbd8b1c-8d05-46cb-8fd7-faf3b029312b",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData[0]).to.have.property(\"idItemReceita\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cultura\");",
									"    pm.expect(jsonData[0].cultura).to.have.property(\"codCultura\");",
									"    pm.expect(jsonData[0].cultura).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].cultura).to.have.property(\"nomeCientifico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"produto\");",
									"    pm.expect(jsonData[0].produto).to.have.property(\"codMapaProduto\");",
									"    pm.expect(jsonData[0].produto).to.have.property(\"nomeComum\");",
									"    pm.expect(jsonData[0].produto).to.have.property(\"nomeTecnico\");",
									"    pm.expect(jsonData[0]).to.have.property(\"idRelacao\");",
									"    pm.expect(jsonData[0]).to.have.property(\"detalhe\");",
									"",
									"});",
									"",
									"pm.test(\"Cinco Receitas\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.be.equals(5);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/ultimas-receitas",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"ultimas-receitas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Imprimir Envelope Frente",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d4a8b58-a746-415f-aa7b-495cf93e3868",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/envelope-frente?razaoSocial=Razao Social para sair no Envelope&endereco=Endereço para sair no Envelope&telefone=Telefone para sair no Envelope&cidade=Cidade para sair no Envelope",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"envelope-frente"
							],
							"query": [
								{
									"key": "razaoSocial",
									"value": "Razao Social para sair no Envelope"
								},
								{
									"key": "endereco",
									"value": "Endereço para sair no Envelope"
								},
								{
									"key": "telefone",
									"value": "Telefone para sair no Envelope"
								},
								{
									"key": "cidade",
									"value": "Cidade para sair no Envelope"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Imprimir Envelope Verso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bdc2966c-fca8-47fe-bbcf-9765e692f920",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : console.log(pm.response.json()));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/envelope-verso",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"envelope-verso"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Frases Padrão",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43a3c7a3-1989-43a2-bd37-02e851047db9",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(12000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    //console.log(jsonData[0].culturasLiberadas);",
									"    pm.expect(jsonData).to.have.property(\"obsManejo\");",
									"    pm.expect(jsonData).to.have.property(\"obsDisposicaoFinalEmbalagens\");",
									"    pm.expect(jsonData.obsDisposicaoFinalEmbalagens).to.contain(\"local de entrega teste\");",
									"",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/listar-frases-padrao?qtdProduto=1&localEntregaEmb=local de entrega teste",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"listar-frases-padrao"
							],
							"query": [
								{
									"key": "qtdProduto",
									"value": "1"
								},
								{
									"key": "localEntregaEmb",
									"value": "local de entrega teste"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar Resumo CREA SP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fde3809-4e34-48ed-80a8-151c109f9cd9",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"text/csv\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/resumo-crea?idRt=10135&dataInicial=2018-08-10&dataFinal=2018-08-10&valorContrato=1000&art=12345",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"resumo-crea"
							],
							"query": [
								{
									"key": "idRt",
									"value": "10135"
								},
								{
									"key": "dataInicial",
									"value": "2018-08-10"
								},
								{
									"key": "dataFinal",
									"value": "2018-08-10"
								},
								{
									"key": "valorContrato",
									"value": "1000"
								},
								{
									"key": "art",
									"value": "12345"
								}
							]
						},
						"description": "\t"
					},
					"response": []
				},
				{
					"name": "Gerar Resumo CREA PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb214b77-791d-4848-9191-a14ec05bd903",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/resumo-crea-pdf?idRt=10135&dataInicial=2018-08-08&dataFinal=2018-08-10&nomeAgronomo=QAs&status=CONCLUIDA&status=DISPONIVEL&status=CONSUMIDA&status=NAO_ASSINADA_DIGITALMENTE&status=CANCELADA&razaoSocial=Empresa%20QA%201234@",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"resumo-crea-pdf"
							],
							"query": [
								{
									"key": "idRt",
									"value": "10135"
								},
								{
									"key": "dataInicial",
									"value": "2018-08-08"
								},
								{
									"key": "dataFinal",
									"value": "2018-08-10"
								},
								{
									"key": "cidadeAgronomo",
									"value": "undefined",
									"disabled": true
								},
								{
									"key": "nomeAgronomo",
									"value": "QAs"
								},
								{
									"key": "status",
									"value": "CONCLUIDA"
								},
								{
									"key": "status",
									"value": "DISPONIVEL"
								},
								{
									"key": "status",
									"value": "CONSUMIDA"
								},
								{
									"key": "status",
									"value": "NAO_ASSINADA_DIGITALMENTE"
								},
								{
									"key": "status",
									"value": "CANCELADA"
								},
								{
									"key": "razaoSocial",
									"value": "Empresa%20QA%201234@"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Emitir Guia Aplicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b0ba3ef-3194-475d-a527-517cffd737f1",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/emitir-guia-aplicacao?idReceita={{idReceita}}&aplicador=Nome Aplicador&prestadoraServico=Prestadora do Serviço&dataAplicacao=2018-08-15",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"emitir-guia-aplicacao"
							],
							"query": [
								{
									"key": "idReceita",
									"value": "{{idReceita}}"
								},
								{
									"key": "aplicador",
									"value": "Nome Aplicador"
								},
								{
									"key": "prestadoraServico",
									"value": "Prestadora do Serviço"
								},
								{
									"key": "dataAplicacao",
									"value": "2018-08-15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar PDF Frases Padrao",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d6ec1ff-fdc2-4303-8c26-2df183fee172",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/frases-padrao",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"frases-padrao"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar Arquivo SIGA",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "007f098a-1332-4ce0-a218-9b309f5c05e6",
								"type": "text/javascript",
								"exec": [
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    pm.environment.set(\"numeroReceita\", jsonData[0].numeroReceita);",
									"    ",
									"    ",
									"   pm.environment.set(\"echoImprimirReceita\", echoPostRequestImprimirReceita = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/'+pm.environment.get(\"idReceita\")+'/imprimir?formato=PDF',",
									"  method: 'GET',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  }",
									"});",
									"",
									"    ",
									"",
									"  pm.sendRequest(pm.environment.get(\"echoImprimirReceita\"), function (err, res) {",
									"});  ",
									"    ",
									"    ",
									"});  "
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3c8a2fb4-cf85-4c97-a7d6-96f060619576",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"text/csv\");",
									"});",
									"",
									"",
									"pm.test(\"Numero da Receita esta incluso\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"numeroReceita\"));",
									"    //pm.expect(pm.response.text()).to.include(\"teste\");",
									"    ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/gerar-arquivo-siga?porAgronomo=true&idRT={{idRTdefault}}&dataInicial={{timestamp}}&dataFinal={{timestamp}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"gerar-arquivo-siga"
							],
							"query": [
								{
									"key": "porAgronomo",
									"value": "true"
								},
								{
									"key": "idRT",
									"value": "{{idRTdefault}}"
								},
								{
									"key": "dataInicial",
									"value": "{{timestamp}}"
								},
								{
									"key": "dataFinal",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Gerar Arquivo SIGA - Forçando validação",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "007f098a-1332-4ce0-a218-9b309f5c05e6",
								"exec": [
									"  pm.sendRequest(pm.environment.get(\"echoGerarReceitaID\"), function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    pm.environment.set(\"numeroReceita\", jsonData[0].numeroReceita);",
									"    ",
									"    ",
									"   pm.environment.set(\"echoImprimirReceita\", echoPostRequestImprimirReceita = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/'+pm.environment.get(\"idReceita\")+'/imprimir?formato=PDF',",
									"  method: 'GET',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  }",
									"});",
									"",
									"    ",
									"",
									"  pm.sendRequest(pm.environment.get(\"echoImprimirReceita\"), function (err, res) {",
									"});  ",
									"    ",
									"    ",
									"});  "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3c8a2fb4-cf85-4c97-a7d6-96f060619576",
								"exec": [
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/gerar-arquivo-siga?porAgronomo=true&idRT={{idRTdefault}}&dataInicial=2019-05-05&dataFinal=2019-05-05",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"gerar-arquivo-siga"
							],
							"query": [
								{
									"key": "porAgronomo",
									"value": "true"
								},
								{
									"key": "idRT",
									"value": "{{idRTdefault}}"
								},
								{
									"key": "dataInicial",
									"value": "2019-05-05"
								},
								{
									"key": "dataFinal",
									"value": "2019-05-05"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Emitir Termo Paraquate",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9e7737ab-ee40-486d-bd00-3bffdd0b4425",
								"type": "text/javascript",
								"exec": [
									" //Gera Receita com item de Paraquate",
									" var echoPostRequestGerarReceitaPorID = {",
									"  url: 'https://time4.agrotis.io/int/rec/api/receitas/gerar-receita/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"  \"receitaApi\": {",
									"    \"idProdutor\": \"25160\",",
									"    \"dataEmissao\": pm.environment.get(\"timestamp\"),",
									"    \"idFazenda\": \"28534\",",
									"    \"idTalhao\": \"62343\",",
									"    \"idRT\": 10135,",
									"    \"idEmpresa\": 10132",
									"  },",
									"  \"usaFrasePadroes\": true,",
									"  \"itens\": [",
									"    {",
									"     \"codRelacao\":37965,",
									"     \"quantidade\":\"14\",",
									"     \"numeroAplicacoes\":\"1\",",
									"     \"dose\":\"1500\",",
									"     \"codPedidoItem\":20,",
									"     \"calda\":\"300\",",
									"     \"areaAplicacao\":\"9.33\",",
									"     \"validarImpressao\":true,",
									"     \"codCultura\":8,",
									"     \"obsRecomendacoes\":\"Pulverizar em jato dirigido nas entrelinhas da cultura, nos estádios iniciais das plantas daninhas. Usar adesivo Aniônico/Não iônico.\",",
									"     \"obsEquipAplicacao\":\"teste\"",
									"    }",
									"  ],",
									"  \"obsManejo\": \"string\",",
									"  \"obsDispEmb\": \"string\",",
									"  \"art\": 475,",
									"  \"numeroReceita\": 0})",
									"    }",
									"};",
									" ",
									" ",
									" ",
									"  pm.sendRequest(echoPostRequestGerarReceitaPorID, function (err, res) {",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"    pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
									"    pm.environment.set(\"numeroReceita\", jsonData[0].numeroReceita);",
									"    ",
									"});",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f538dfcd-bf0a-48c8-bf50-769185b5b60e",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"pm.test(\"Content-Type is PDF\", function () {",
									"    ",
									"    pm.expect(pm.response.headers.one(\"Content-Type\").value).to.eql(\"application/pdf\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/{{idReceita}}/emitir-termo-paraquate",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"{{idReceita}}",
								"emitir-termo-paraquate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Carregar Guia de Aplicação Aérea da Receita",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/aplicacao-aerea/receita/{{idReceita}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"aplicacao-aerea",
								"receita",
								"{{idReceita}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Emitir Guia de Aplicação Aérea ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/aplicacao-aerea?aplicacaoAerea=%7B%22dataAplicacao%22:%222018-08-16T03:00:00.000Z%22,%22idReceita%22:%2289321%22,%22alturaAplicacao%22:%2223%22,%22faixaDeposicao%22:%2243%22,%22epocaAplicacao%22:%2232%22,%22temperatura%22:%22232%22,%22umidade%22:%22343%22,%22velocidadeVento%22:%22100%22,%22equipAplicacao%22:%2245%22,%22modelo%22:%22tx%22,%22tipo%22:%22barato%22,%22angulo%22:%2280%22,%22nomePiloto%22:%22Felipe%20Antonio%22,%22chtPiloto%22:%2223245%22,%22tipoServico%22:%22Pulverizacao%22,%22nomeTecnicoExecutor%22:%22alex%22,%22creaTecnicoExecutor%22:%222323PR%22,%22proprietarioPreposto%22:%22Seu%20%20Joao%22,%22registroMapa%22:%22232%22,%22descProdutoAdju1%22:%22com%20Calda%22%7d",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"aplicacao-aerea"
							],
							"query": [
								{
									"key": "aplicacaoAerea",
									"value": "%7B%22dataAplicacao%22:%222018-08-16T03:00:00.000Z%22,%22idReceita%22:%2289321%22,%22alturaAplicacao%22:%2223%22,%22faixaDeposicao%22:%2243%22,%22epocaAplicacao%22:%2232%22,%22temperatura%22:%22232%22,%22umidade%22:%22343%22,%22velocidadeVento%22:%22100%22,%22equipAplicacao%22:%2245%22,%22modelo%22:%22tx%22,%22tipo%22:%22barato%22,%22angulo%22:%2280%22,%22nomePiloto%22:%22Felipe%20Antonio%22,%22chtPiloto%22:%2223245%22,%22tipoServico%22:%22Pulverizacao%22,%22nomeTecnicoExecutor%22:%22alex%22,%22creaTecnicoExecutor%22:%222323PR%22,%22proprietarioPreposto%22:%22Seu%20%20Joao%22,%22registroMapa%22:%22232%22,%22descProdutoAdju1%22:%22com%20Calda%22%7d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Receitas Disponíveis para Consumo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/rec/api/receitas-consulta/consumir?dataInicial=2018-10-24&dataFinal=2018-10-25&idProdutor=25160&idPropriedade=25465&codMapaProduto=0610&idCultura=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"rec",
								"api",
								"receitas-consulta",
								"consumir"
							],
							"query": [
								{
									"key": "dataInicial",
									"value": "2018-10-24"
								},
								{
									"key": "dataFinal",
									"value": "2018-10-25"
								},
								{
									"key": "idProdutor",
									"value": "25160"
								},
								{
									"key": "idPropriedade",
									"value": "25465"
								},
								{
									"key": "codMapaProduto",
									"value": "0610"
								},
								{
									"key": "idCultura",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Responsavel Tecnico",
			"item": [
				{
					"name": "Cadastra um novo Responsavel Técnico",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c45b8382-c449-4fbc-9203-3b97d51a3411",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"postman.setEnvironmentVariable(\"randomCPF\", utils.gerarCPF()); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "12ea8824-08bc-421c-99bc-16bc214ae7df",
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 201 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idRT\", jsonData.id);",
									"    ",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"tipoPessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nomeCurto\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"cidade\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"logradouro\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"bairro\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"numero\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"cep\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"principal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"telefoneUm\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"telefoneDois\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"email\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"tipoPessoa\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"atividadePrincipal\");",
									"    pm.expect(jsonData).to.have.property(\"vistos\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"estadoApi\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"vistoRtRegistro\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"creaFormacaoRt\");",
									"    pm.expect(jsonData).to.have.property(\"tiposResponsavelTecnico\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"tipoPessoaApi\":{  \r\n      \"pessoaApi\":{  \r\n         \"enderecos\":[  \r\n            {  \r\n               \"principal\":true,\r\n               \"cidade\":{  \r\n                  \"id\":3123,\r\n                  \"codIbge\":\"4106902\",\r\n                  \"nome\":\"Curitiba\"\r\n               },\r\n               \"cep\":\"80230010\",\r\n               \"bairro\":\"Rebouças\",\r\n               \"logradouro\":\"Avenida Sete De Setembro\",\r\n               \"numero\":\"23\",\r\n               \"microrregiao\":null\r\n            }\r\n         ],\r\n         \"paisApi\":{  \r\n            \"id\":31,\r\n            \"nome\":\"BRASIL\",\r\n            \"codBacen\":\"1058\",\r\n            \"codIso\":\"BRA\",\r\n            \"detalhe\":{  \r\n               \"id\":31\r\n            }\r\n         },\r\n         \"inscricaoFiscal\":{{randomCPF}},\r\n         \"nome\":\"Postman\",\r\n         \"nomeCurto\":\"Apelidando o Postman\",\r\n         \"pessoaFisicaApi\":{  \r\n            \"sexo\":\"M\",\r\n            \"tratamento\":\"Senhor\",\r\n            \"rg\":\"Registro Geral\"\r\n         },\r\n         \"telefoneUm\":\"1234565643\",\r\n         \"telefoneDois\":\"1234566544\",\r\n         \"email\":\"emailpost@agrotis.com\"\r\n      }\r\n   },\r\n   \"vistos\": [\r\n    {\r\n      \"estadoApi\": {\r\n        \"id\": 267,\r\n        \"detalhe\": {\r\n          \"versao\": 0,\r\n          \"id\": 0\r\n        }\r\n      },\r\n      \"vistoRtRegistro\": \"23232323/PR\",\r\n      \"ativo\": true\r\n    }\r\n  ],\r\n   \"tiposResponsavelTecnico\": [\r\n    \"SEMENTES_ESPECIES_FLORESTAIS\",\r\n    \"MUDAS_ESPECIES_FLORESTAIS\",\r\n    \"SEMENTES_ESPECIES_AGRICOLAS\",\r\n    \"MUDAS_ESPECIES_AGRICOLAS\"\r\n  ],\r\n   \"creaFormacaoRt\": \"ENGENHEIRO_AGRONOMO\",\r\n   \"ativo\":\"true\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/core/api/responsavel-tecnico",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"responsavel-tecnico"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca um Responsavel Tecnico por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a587239-76f7-4aa3-bbb2-bfeb416a277e",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idRT\", jsonData.id);",
									"        pm.environment.set(\"detalheRT\", jsonData);",
									"    ",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"tipoPessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nomeCurto\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"cidade\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"logradouro\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"bairro\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"numero\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"cep\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"principal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"telefoneUm\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"telefoneDois\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"email\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"tipoPessoa\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"atividadePrincipal\");",
									"    pm.expect(jsonData).to.have.property(\"vistos\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"estadoApi\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"vistoRtRegistro\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"creaFormacaoRt\");",
									"    pm.expect(jsonData).to.have.property(\"tiposResponsavelTecnico\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6a5b5ad2-ee62-4e9e-b596-51cb1f1233d7",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"postman.setEnvironmentVariable(\"randomCPF\", utils.gerarCPF()); ",
									"",
									"//GERA O MODELO DE REQUEST DE CRIAR O RT",
									"pm.environment.set(\"echoGerarRT\", echoPostRequestGerarRT = {",
									"  url: pm.environment.get(\"url\")+'/core/api/responsavel-tecnico/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"   \"tipoPessoaApi\":{  ",
									"      \"pessoaApi\":{  ",
									"         \"enderecos\":[  ",
									"            {  ",
									"               \"principal\":true,",
									"               \"cidade\":{  ",
									"                  \"id\":3123,",
									"                  \"codIbge\":\"4106902\",",
									"                  \"nome\":\"Curitiba\",",
									"                  \"estado\":{  ",
									"                     \"id\":267,",
									"                     \"uf\":\"PR\",",
									"                     \"nome\":\"Paraná\",",
									"                     \"pais\":{  ",
									"                        \"id\":31,",
									"                        \"nome\":\"BRASIL\",",
									"                        \"codBacen\":\"1058\",",
									"                        \"codIso\":\"BRA\",",
									"                        \"detalhe\":{  ",
									"                           \"usuarioInclusao\":0,",
									"                           \"usuarioAlteracao\":0,",
									"                           \"dataHoraInclusao\":\"2016-09-05T12:00:00.000Z\",",
									"                           \"dataHoraAlteracao\":\"2016-09-05T12:00:00.000Z\",",
									"                           \"versao\":0,",
									"                           \"uuid\":\"b3018ad8-735a-11e6-8b77-86f30ca893d3\",",
									"                           \"id\":31,",
									"                           \"registroAgrotis\":true",
									"                        }",
									"                     },",
									"                     \"detalhe\":{  ",
									"                        \"usuarioInclusao\":0,",
									"                        \"usuarioAlteracao\":0,",
									"                        \"dataHoraInclusao\":\"2016-09-05T12:00:00.000Z\",",
									"                        \"dataHoraAlteracao\":\"2016-09-05T12:00:00.000Z\",",
									"                        \"versao\":0,",
									"                        \"uuid\":\"0d22ef2e-7370-11e6-8b77-86f30ca893d3\",",
									"                        \"id\":267,",
									"                        \"registroAgrotis\":true",
									"                     }",
									"                  },",
									"                  \"detalhe\":{  ",
									"                     \"usuarioInclusao\":0,",
									"                     \"usuarioAlteracao\":0,",
									"                     \"dataHoraInclusao\":\"2016-09-05T12:00:00.000Z\",",
									"                     \"dataHoraAlteracao\":\"2016-09-05T12:00:00.000Z\",",
									"                     \"versao\":0,",
									"                     \"uuid\":\"836c7292-7371-11e6-bdf4-0800200c9a66\",",
									"                     \"id\":3123,",
									"                     \"registroAgrotis\":true",
									"                  }",
									"               },",
									"               \"cep\":\"80230010\",",
									"               \"bairro\":\"Rebouças\",",
									"               \"logradouro\":\"Avenida Sete De Setembro\",",
									"               \"numero\":\"23\",",
									"               \"microrregiao\":null",
									"            }",
									"         ],",
									"         \"paisApi\":{  ",
									"            \"id\":31,",
									"            \"nome\":\"BRASIL\",",
									"            \"codBacen\":\"1058\",",
									"            \"codIso\":\"BRA\",",
									"            \"detalhe\":{  ",
									"               \"id\":31",
									"            }",
									"         },",
									"         \"inscricaoFiscal\": cpf,",
									"         \"nome\":\"Postman\",",
									"         \"nomeCurto\":\"Apelidando o Postman\",",
									"         \"pessoaFisicaApi\":{  ",
									"            \"sexo\":\"M\",",
									"            \"tratamento\":\"Senhor\",",
									"            \"rg\":\"Registro Geral\"",
									"         },",
									"         \"telefoneUm\":\"1234565643\",",
									"         \"telefoneDois\":\"1234566544\",",
									"         \"email\":\"emailpost@agrotis.com\"",
									"      }",
									"   },",
									"   \"vistos\": [",
									"    {",
									"      \"estadoApi\": {",
									"        \"id\": 267,",
									"        \"detalhe\": {",
									"          \"versao\": 0,",
									"          \"id\": 0",
									"        }",
									"      },",
									"      \"vistoRtRegistro\": \"23232323/PR\",",
									"      \"ativo\": true",
									"    }",
									"  ],",
									"   \"tiposResponsavelTecnico\": [",
									"    \"SEMENTES_ESPECIES_FLORESTAIS\",",
									"    \"MUDAS_ESPECIES_FLORESTAIS\",",
									"    \"SEMENTES_ESPECIES_AGRICOLAS\",",
									"    \"MUDAS_ESPECIES_AGRICOLAS\"",
									"  ],",
									"   \"creaFormacaoRt\": \"ENGENHEIRO_AGRONOMO\",",
									"   \"ativo\":\"true\"",
									"})",
									"    }",
									"});",
									"",
									"  //ENVIA O REQUEST DE CRIAR O RT",
									"  pm.sendRequest(pm.environment.get(\"echoGerarRT\"), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idRT\", jsonData.id);  ",
									"      ",
									"      ",
									"}); "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/responsavel-tecnico/{{idRT}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"responsavel-tecnico",
								"{{idRT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar um Responsavel Tecnico",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e60e6095-1fc9-45b0-bf20-c5a3dc8bbaf3",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"postman.setEnvironmentVariable(\"randomCPF\", utils.gerarCPF()); ",
									"",
									"//GERA O MODELO DE REQUEST DE CRIAR O RT",
									"pm.environment.set(\"echoGerarRT\", echoPostRequestGerarRT = {",
									"  url: pm.environment.get(\"url\")+'/core/api/responsavel-tecnico/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({  ",
									"   \"tipoPessoaApi\":{  ",
									"      \"pessoaApi\":{  ",
									"         \"enderecos\":[  ",
									"            {  ",
									"               \"principal\":true,",
									"               \"cidade\":{  ",
									"                  \"id\":3123,",
									"                  \"codIbge\":\"4106902\",",
									"                  \"nome\":\"Curitiba\",",
									"                  \"estado\":{  ",
									"                     \"id\":267,",
									"                     \"uf\":\"PR\",",
									"                     \"nome\":\"Paraná\",",
									"                     \"pais\":{  ",
									"                        \"id\":31,",
									"                        \"nome\":\"BRASIL\",",
									"                        \"codBacen\":\"1058\",",
									"                        \"codIso\":\"BRA\",",
									"                        \"detalhe\":{  ",
									"                           \"usuarioInclusao\":0,",
									"                           \"usuarioAlteracao\":0,",
									"                           \"dataHoraInclusao\":\"2016-09-05T12:00:00.000Z\",",
									"                           \"dataHoraAlteracao\":\"2016-09-05T12:00:00.000Z\",",
									"                           \"versao\":0,",
									"                           \"uuid\":\"b3018ad8-735a-11e6-8b77-86f30ca893d3\",",
									"                           \"id\":31,",
									"                           \"registroAgrotis\":true",
									"                        }",
									"                     },",
									"                     \"detalhe\":{  ",
									"                        \"usuarioInclusao\":0,",
									"                        \"usuarioAlteracao\":0,",
									"                        \"dataHoraInclusao\":\"2016-09-05T12:00:00.000Z\",",
									"                        \"dataHoraAlteracao\":\"2016-09-05T12:00:00.000Z\",",
									"                        \"versao\":0,",
									"                        \"uuid\":\"0d22ef2e-7370-11e6-8b77-86f30ca893d3\",",
									"                        \"id\":267,",
									"                        \"registroAgrotis\":true",
									"                     }",
									"                  },",
									"                  \"detalhe\":{  ",
									"                     \"usuarioInclusao\":0,",
									"                     \"usuarioAlteracao\":0,",
									"                     \"dataHoraInclusao\":\"2016-09-05T12:00:00.000Z\",",
									"                     \"dataHoraAlteracao\":\"2016-09-05T12:00:00.000Z\",",
									"                     \"versao\":0,",
									"                     \"uuid\":\"836c7292-7371-11e6-bdf4-0800200c9a66\",",
									"                     \"id\":3123,",
									"                     \"registroAgrotis\":true",
									"                  }",
									"               },",
									"               \"cep\":\"80230010\",",
									"               \"bairro\":\"Rebouças\",",
									"               \"logradouro\":\"Avenida Sete De Setembro\",",
									"               \"numero\":\"23\",",
									"               \"microrregiao\":null",
									"            }",
									"         ],",
									"         \"paisApi\":{  ",
									"            \"id\":31,",
									"            \"nome\":\"BRASIL\",",
									"            \"codBacen\":\"1058\",",
									"            \"codIso\":\"BRA\",",
									"            \"detalhe\":{  ",
									"               \"id\":31",
									"            }",
									"         },",
									"         \"inscricaoFiscal\": cpf,",
									"         \"nome\":\"Postman\",",
									"         \"nomeCurto\":\"Apelidando o Postman\",",
									"         \"pessoaFisicaApi\":{  ",
									"            \"sexo\":\"M\",",
									"            \"tratamento\":\"Senhor\",",
									"            \"rg\":\"Registro Geral\"",
									"         },",
									"         \"telefoneUm\":\"1234565643\",",
									"         \"telefoneDois\":\"1234566544\",",
									"         \"email\":\"emailpost@agrotis.com\"",
									"      }",
									"   },",
									"   \"vistos\": [",
									"    {",
									"      \"estadoApi\": {",
									"        \"id\": 267,",
									"        \"detalhe\": {",
									"          \"versao\": 0,",
									"          \"id\": 0",
									"        }",
									"      },",
									"      \"vistoRtRegistro\": \"23232323/PR\",",
									"      \"ativo\": true",
									"    }",
									"  ],",
									"   \"tiposResponsavelTecnico\": [",
									"    \"SEMENTES_ESPECIES_FLORESTAIS\",",
									"    \"MUDAS_ESPECIES_FLORESTAIS\",",
									"    \"SEMENTES_ESPECIES_AGRICOLAS\",",
									"    \"MUDAS_ESPECIES_AGRICOLAS\"",
									"  ],",
									"   \"creaFormacaoRt\": \"ENGENHEIRO_AGRONOMO\",",
									"   \"ativo\":\"true\"",
									"})",
									"    }",
									"});",
									"",
									"  //ENVIA O REQUEST DE CRIAR O RT",
									"  pm.sendRequest(pm.environment.get(\"echoGerarRT\"), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idRT\", jsonData.id);  ",
									"    jsonData.tipoPessoaApi.pessoaApi.nome = \"RT alterado\";",
									"    pm.environment.set(\"detalheRT\", JSON.stringify(jsonData));  ",
									"    console.log(pm.environment.get(\"detalheRT\"));  ",
									"}); ",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c8332fc9-620a-4019-a52e-835ee0a5433b",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idRT\", jsonData.id);",
									"        pm.environment.set(\"detalheRT\", jsonData);",
									"    ",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"tipoPessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nomeCurto\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"cidade\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"logradouro\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"bairro\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"numero\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"cep\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"principal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.enderecos[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"telefoneUm\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"telefoneDois\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"email\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"tipoPessoa\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"atividadePrincipal\");",
									"    pm.expect(jsonData).to.have.property(\"vistos\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"estadoApi\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"vistoRtRegistro\");",
									"    pm.expect(jsonData.vistos[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"creaFormacaoRt\");",
									"    pm.expect(jsonData).to.have.property(\"tiposResponsavelTecnico\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{detalheRT}}"
						},
						"url": {
							"raw": "{{url}}/core/api/responsavel-tecnico",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"responsavel-tecnico"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Produtor Rural",
			"item": [
				{
					"name": "Fluxos",
					"item": [
						{
							"name": "Vinculo CulturaSafraPropriedade",
							"item": [
								{
									"name": "Vincular Cultura-Safra-Propriedade - Produtor sem Propriedade",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3da56275-3e78-410f-8d14-45e63e02d834",
												"exec": [
													"let utils = eval(globals.loadUtils);",
													"",
													"//Cadastra Produtor",
													"pm.sendRequest(utils.cadastrarProdutor(utils.gerarCPF()), function (err, res) {",
													"    ",
													"  console.log(err ? err : res.json());",
													"  var jsonData = res.json();",
													"  pm.environment.set(\"idProdutor\", jsonData.id);",
													"            ",
													"",
													"});  ",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d5fce27b-4015-472a-a7c7-b9a6c3990978",
												"exec": [
													"",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Response time is less than\"+pm.environment.get(\"responseTimeLimit\"), function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
													"});",
													"",
													"(pm.response.code === 400 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.expect(jsonData[0]).to.have.property(\"codigo\");",
													"    pm.expect(jsonData[0]).to.have.property(\"mensagem\");",
													"    pm.expect(jsonData[0].mensagem, 'Validação mensagem').to.contain(\"vinculadas\");",
													"",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-AUTH-TOKEN",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"areaMediaAnual\": 50,\n    \"nivelTecnologico\": \"MEDIO\",\n    \"ativo\": true,\n    \"idProdutorRural\": {{idProdutor}},\n    \"idCultura\": 81556,\n    \"idSafra\": 83609,\n    \"idPropriedadeRural\": 83951\n}"
										},
										"url": {
											"raw": "{{url}}/core/api/produtor-rural/vincular-cultura-safra-propriedade",
											"host": [
												"{{url}}"
											],
											"path": [
												"core",
												"api",
												"produtor-rural",
												"vincular-cultura-safra-propriedade"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Cadastra um novo Produtor Rural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6788d3f-7107-495b-8fa5-59f77c3acbe2",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 201 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idRT\", jsonData.id);",
									"    ",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"tipoPessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"pessoaFisicaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"atividadePrincipal\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "be12515e-3cb4-407d-b679-caf633163780",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"postman.setEnvironmentVariable(\"randomCPF\", utils.gerarCPF()); "
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"tipoPessoaApi\":{\r\n      \"pessoaApi\":{\r\n         \"paisApi\":{\r\n            \"id\":31,\r\n            \"nome\":\"BRASIL\",\r\n            \"codBacen\":\"1058\",\r\n            \"codIso\":\"BRA\"\r\n         },\r\n         \"inscricaoFiscal\":{{randomCPF}},\r\n         \"nome\":\"Produtor Rural Postman\",\r\n         \"pessoaFisicaApi\":{\r\n            \"sexo\":\"M\"\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca um Produtor Rural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8d356c2-39bf-4548-b381-f2e56c748eb7",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idRT\", jsonData.id);",
									"    ",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"tipoPessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"pessoaFisicaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"atividadePrincipal\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7978406e-6bae-480e-ad08-c08c5a3a91d2",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"pm.environment.set(\"randomCPF\", utils.gerarCPF());",
									"",
									"//GERA O MODELO DE REQUEST DE CRIAR O PRODUTOR RURAL",
									"pm.environment.set(\"echoGerarProdutorRural\", echoPostRequestGerarRT = {",
									"  url: pm.environment.get(\"url\")+'/core/api/produtor-rural/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"            body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify(",
									"            {",
									"   \"tipoPessoaApi\":{",
									"      \"pessoaApi\":{",
									"         \"paisApi\":{",
									"            \"id\":31,",
									"            \"nome\":\"BRASIL\",",
									"            \"codBacen\":\"1058\",",
									"            \"codIso\":\"BRA\"",
									"         },",
									"         \"inscricaoFiscal\":cpf,",
									"         \"nome\":\"Produtor Rural Postman\",",
									"         \"pessoaFisicaApi\":{",
									"            \"sexo\":\"M\"",
									"         }",
									"      }",
									"   }",
									"}",
									"             )",
									"    }",
									"});",
									"",
									"//ENVIA O REQUEST DE CRIAR O PRODUTOR RURAL",
									"pm.sendRequest(pm.environment.get(\"echoGerarProdutorRural\"), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idProdutor\", jsonData.id);  ",
									"      ",
									"}); "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural/{{idProdutor}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural",
								"{{idProdutor}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar um Produtor Rural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9610f026-6be1-4cda-b5d5-e586776c2d14",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idRT\", jsonData.id);",
									"    ",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"tipoPessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"pessoaFisicaApi\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData.tipoPessoaApi.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"atividadePrincipal\");",
									"    pm.expect(jsonData.tipoPessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bf27d5df-a977-474e-9297-9df3787efa9b",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"pm.environment.set(\"randomCPF\", utils.gerarCPF());",
									"",
									"//GERA O MODELO DE REQUEST DE CRIAR O PRODUTOR RURAL",
									"pm.environment.set(\"echoGerarProdutorRural\", echoPostRequestGerarRT = {",
									"  url: pm.environment.get(\"url\")+'/core/api/produtor-rural/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"            body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify(",
									"            {",
									"   \"tipoPessoaApi\":{",
									"      \"pessoaApi\":{",
									"         \"paisApi\":{",
									"            \"id\":31,",
									"            \"nome\":\"BRASIL\",",
									"            \"codBacen\":\"1058\",",
									"            \"codIso\":\"BRA\"",
									"         },",
									"         \"inscricaoFiscal\":cpf,",
									"         \"nome\":\"Produtor Rural Postman\",",
									"         \"pessoaFisicaApi\":{",
									"            \"sexo\":\"M\"",
									"         }",
									"      }",
									"   }",
									"}",
									"             )",
									"    }",
									"});",
									"",
									"",
									"//ENVIA O REQUEST DE CRIAR O PRODUTOR RURAL",
									"pm.sendRequest(pm.environment.get(\"echoGerarProdutorRural\"), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idProdutor\", jsonData.id);  ",
									"    jsonData.tipoPessoaApi.pessoaApi.nome = \"Produtor Rural Postman Alterado\"",
									"    jsonData.tipoPessoaApi.pessoaApi.detalhe.versao = 1",
									"    pm.environment.set(\"detalheProdutor\", JSON.stringify(jsonData));",
									"    //console.log(pm.environment.get(\"detalheProdutor\"));",
									"      ",
									"}); ",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{detalheProdutor}}"
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vincular Produtor x Propriedade",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7de9d561-24bb-4192-ad1a-d83fdf7199ab",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"pm.sendRequest(utils.cadastrarProdutor(utils.gerarCPF()), function (err, res) {",
									"    ",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  pm.environment.set(\"idProdutor\", jsonData.id);",
									"",
									"});  ",
									"",
									"pm.sendRequest(utils.cadastrarPropriedade(), function (err, res) {",
									"    ",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  pm.environment.set(\"idPropriedadeRural\", jsonData.id);",
									"  ",
									"});  ",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6daf2c4c-3727-480a-932b-6b15a4558f44",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"idProdutorRural\":{{idProdutor}},\r\n   \"idPropriedadeRural\":{{idPropriedadeRural}},\r\n   \"tipo\":\"PROPRIETARIO\",\r\n   \"dataInicio\":\"2018-10-17T03:00:00.000Z\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/core/api/propriedade-rural/explorador",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"propriedade-rural",
								"explorador"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca vínculos de Produtor x Propriedade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "333403b2-261f-4b8d-a4ad-3c33d6979b7f",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData[0].idProdutorRural, 'Validação ID Produtor Rural').to.eql(pm.environment.get(\"idProdutor\"));",
									"    pm.expect(jsonData[0].idPropriedadeRural, 'Validação ID Propriedade Rural').to.eql(pm.environment.get(\"idPropriedadeRural\"));",
									"    pm.expect(jsonData[0]).to.have.property(\"uuidExplorador\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nome\");",
									"    pm.expect(jsonData[0]).to.have.property(\"nomePropriedade\");",
									"    pm.expect(jsonData[0]).to.have.property(\"cidade\");",
									"    pm.expect(jsonData[0]).to.have.property(\"estado\");",
									"    pm.expect(jsonData[0]).to.have.property(\"dataInicio\");",
									"    pm.expect(jsonData[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData[0]).to.have.property(\"tipo\");",
									"    pm.expect(jsonData[0]).to.have.property(\"ativo\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e48bc150-bf53-4b3c-b528-2680531e410a",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"",
									"//Cadastra Produtor",
									"pm.sendRequest(utils.cadastrarProdutor(utils.gerarCPF()), function (err, res) {",
									"    ",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  pm.environment.set(\"idProdutor\", jsonData.id);",
									"            ",
									"            //Cadastra Propriedade Rural",
									"            pm.sendRequest(utils.cadastrarPropriedade(), function (err, res) {",
									"                ",
									"              console.log(err ? err : res.json());",
									"              var jsonData = res.json();",
									"              pm.environment.set(\"idPropriedadeRural\", jsonData.id);",
									"              ",
									"                    //Request de vincular Produtor e Propriedade baseado nos Ids em variavel",
									"                    echoPostRequestVinculaProdutorPropriedade = {",
									"                      url: pm.environment.get(\"url\")+'/core/api/propriedade-rural/explorador',",
									"                      method: 'POST',",
									"                      header: {",
									"                        'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"                        'Content-Type':'application/json'",
									"                      },",
									"                        body: {",
									"                            mode: 'raw',",
									"                            raw: JSON.stringify(",
									"                    {",
									"                       \"idProdutorRural\":pm.environment.get(\"idProdutor\"),",
									"                       \"idPropriedadeRural\":pm.environment.get(\"idPropriedadeRural\"),",
									"                       \"tipo\":\"PROPRIETARIO\",",
									"                       \"dataInicio\":\"2018-10-17T03:00:00.000Z\",",
									"                       \"id\": 66145,",
									"                       \"nome\": \"TESTE POSTMAN\",",
									"                       \"uuidExplorador\": \"2228c224-11a8-4750-80b1-973753594f44\"",
									"                    }",
									"                      )",
									"                        }",
									"                    }",
									"                    pm.sendRequest(echoPostRequestVinculaProdutorPropriedade, function (err, res) {",
									"                      ",
									"                    });                        ",
									"              ",
									"            });",
									"",
									"});  ",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural/{{idProdutor}}/propriedades-rurais",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural",
								"{{idProdutor}}",
								"propriedades-rurais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vincular Cultura-Safra-Propriedade",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3da56275-3e78-410f-8d14-45e63e02d834",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"//Cadastra Produtor",
									"pm.sendRequest(utils.cadastrarProdutor(utils.gerarCPF()), function (err, res) {",
									"    ",
									"  console.log(err ? err : res.json());",
									"  var jsonData = res.json();",
									"  pm.environment.set(\"idProdutor\", jsonData.id);",
									"            ",
									"            //Cadastra Propriedade Rural",
									"            pm.sendRequest(utils.cadastrarPropriedade(), function (err, res) {",
									"                ",
									"              console.log(err ? err : res.json());",
									"              var jsonData = res.json();",
									"              pm.environment.set(\"idPropriedadeRural\", jsonData.id);",
									"              ",
									"                    //Request de vincular Produtor e Propriedade baseado nos Ids em variavel",
									"                    echoPostRequestVinculaProdutorPropriedade = {",
									"                      url: pm.environment.get(\"url\")+'/core/api/propriedade-rural/explorador',",
									"                      method: 'POST',",
									"                      header: {",
									"                        'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"                        'Content-Type':'application/json'",
									"                      },",
									"                        body: {",
									"                            mode: 'raw',",
									"                            raw: JSON.stringify(",
									"                    {",
									"                       \"idProdutorRural\":pm.environment.get(\"idProdutor\"),",
									"                       \"idPropriedadeRural\":pm.environment.get(\"idPropriedadeRural\"),",
									"                       \"tipo\":\"PROPRIETARIO\",",
									"                       \"dataInicio\":\"2018-10-17T03:00:00.000Z\",",
									"                       \"id\": 66145,",
									"                       \"nome\": \"TESTE POSTMAN\",",
									"                       \"uuidExplorador\": \"2228c224-11a8-4750-80b1-973753594f44\"",
									"                    }",
									"                      )",
									"                        }",
									"                    }",
									"                    pm.sendRequest(echoPostRequestVinculaProdutorPropriedade, function (err, res) {",
									"                      ",
									"                    });                        ",
									"              ",
									"            });",
									"",
									"});  ",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d5fce27b-4015-472a-a7c7-b9a6c3990978",
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than\"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"areaMediaAnual\": 50,\n    \"nivelTecnologico\": \"MEDIO\",\n    \"ativo\": true,\n    \"idProdutorRural\": {{idProdutor}},\n    \"idCultura\": 81556,\n    \"idSafra\": 83609,\n    \"idPropriedadeRural\": {{idPropriedadeRural}}\n}"
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural/vincular-cultura-safra-propriedade",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural",
								"vincular-cultura-safra-propriedade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar Características Produtor Rural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf88ec59-7b74-407d-8c7c-e23a41c5434d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than\"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"idCultSafraProp\", jsonData.culturas[0].id);",
									"    ",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"culturaApi\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"nivelTecnologico\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"areaMediaAnual\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"safraApi\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"propriedadeRuralApi\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"detalhe\");",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural/pesquisar-caracteristicas/{{idProdutor}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural",
								"pesquisar-caracteristicas",
								"{{idProdutor}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar Vínculo Cultura-Safra-Propriedade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5a2b458-1098-4ad2-a672-e2a34fbe116d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than\"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"id\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"ativo\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"culturaApi\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"nivelTecnologico\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"areaMediaAnual\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"safraApi\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"propriedadeRuralApi\");",
									"    pm.expect(jsonData.culturas[0]).to.have.property(\"detalhe\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural/pesquisar-vinculo-cultura/{{idCultSafraProp}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural",
								"pesquisar-vinculo-cultura",
								"{{idCultSafraProp}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Desvincular Cultura-Safra-Propriedade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "376d545a-336e-49df-80fb-27a060fb3f32",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than\"+pm.environment.get(\"responseTimeLimit\"), function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/produtor-rural/desvincular-cultura-safra-propriedade/{{idCultSafraProp}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"produtor-rural",
								"desvincular-cultura-safra-propriedade",
								"{{idCultSafraProp}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Propriedade Rural",
			"item": [
				{
					"name": "Cadastra uma nova Propriedade",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d4d7506-365d-4d1c-83a4-fe9b1697b247",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 201 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"propriedadeRural\", jsonData.id);",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"nome\");",
									"    pm.expect(jsonData).to.have.property(\"endereco\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"id\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"cidade\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"logradouro\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"bairro\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"cep\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"area\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"talhoes\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"    ",
									"",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n   \"nome\":\"Propriedade Rural Postman\",\r\n   \"area\":12,\r\n   \"ativo\":true,\r\n   \"endereco\":{  \r\n      \"cidade\":{  \r\n         \"id\":3123,\r\n         \"nome\":\"Curitiba\",\r\n         \"estado\":{  \r\n            \"id\":267,\r\n            \"uf\":\"PR\",\r\n            \"nome\":\"Paraná\",\r\n            \"pais\":{  \r\n               \"id\":31,\r\n               \"nome\":\"BRASIL\",\r\n               \"codBacen\":\"1058\",\r\n               \"codIso\":\"BRA\"\r\n            }\r\n         },\r\n         \"detalhe\":{  \r\n            \"id\":3123\r\n         }\r\n      },\r\n      \"cep\":\"80230010\",\r\n      \"bairro\":\"Rebouças\",\r\n      \"logradouro\":\"Avenida Sete De Setembro\",\r\n      \"principal\":true\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{url}}/core/api/propriedade-rural",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"propriedade-rural"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca uma Propriedade Rural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99289d07-afc0-4420-b8dd-85c2177ade0c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"propriedadeRural\", jsonData.id);",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"nome\");",
									"    pm.expect(jsonData).to.have.property(\"endereco\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"id\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"cidade\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"logradouro\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"bairro\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"cep\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"area\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"talhoes\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"    ",
									"",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "be6f1b34-8553-4811-a071-8181015f581f",
								"type": "text/javascript",
								"exec": [
									"",
									"//GERA O MODELO DE REQUEST DE CRIAR O PRODUTOR RURAL",
									"pm.environment.set(\"echoGerarPropriedadeRural\", echoPostRequestGerarPropriedadeRural = {",
									"  url: pm.environment.get(\"url\")+'/core/api/propriedade-rural/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"            body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify(",
									"            {",
									"   \"nome\":\"Propriedade Rural Postman\",",
									"   \"area\":12,",
									"   \"ativo\":true,",
									"   \"endereco\":{  ",
									"      \"cidade\":{  ",
									"         \"id\":3123,",
									"         \"nome\":\"Curitiba\",",
									"         \"estado\":{  ",
									"            \"id\":267,",
									"            \"uf\":\"PR\",",
									"            \"nome\":\"Paraná\",",
									"            \"pais\":{  ",
									"               \"id\":31,",
									"               \"nome\":\"BRASIL\",",
									"               \"codBacen\":\"1058\",",
									"               \"codIso\":\"BRA\"",
									"            }",
									"         },",
									"         \"detalhe\":{  ",
									"            \"id\":3123",
									"         }",
									"      },",
									"      \"cep\":\"80230010\",",
									"      \"bairro\":\"Rebouças\",",
									"      \"logradouro\":\"Avenida Sete De Setembro\",",
									"      \"principal\":true",
									"   }",
									"}",
									"             )",
									"    }",
									"});",
									"",
									"",
									"//ENVIA O REQUEST DE CRIAR O PRODUTOR RURAL",
									"pm.sendRequest(pm.environment.get(\"echoGerarPropriedadeRural\"), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idPropriedadeRural\", jsonData.id);  ",
									"      ",
									"}); "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/propriedade-rural/{{idPropriedadeRural}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"propriedade-rural",
								"{{idPropriedadeRural}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edita uma Propriedade Rural",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74825b24-1212-4b83-afcb-b4da3303dc32",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"propriedadeRural\", jsonData.id);",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"nome\");",
									"    pm.expect(jsonData).to.have.property(\"endereco\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"id\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"cidade\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"logradouro\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"bairro\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"cep\");",
									"    pm.expect(jsonData.endereco).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"area\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"talhoes\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"    ",
									"",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "88c079a3-6881-4847-827f-2cda12bf0552",
								"type": "text/javascript",
								"exec": [
									"",
									"//GERA O MODELO DE REQUEST DE CRIAR A PROPRIEDADE RURAL",
									"pm.environment.set(\"echoGerarPropriedadeRural\", echoPostRequestGerarPropriedadeRural = {",
									"  url: pm.environment.get(\"url\")+'/core/api/propriedade-rural/',",
									"  method: 'POST',",
									"  header: {",
									"    'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"    'Content-Type':'application/json'",
									"  },",
									"            body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify(",
									"            {",
									"   \"nome\":\"Propriedade Rural Postman\",",
									"   \"area\":12,",
									"   \"ativo\":true,",
									"   \"endereco\":{  ",
									"      \"cidade\":{  ",
									"         \"id\":3123,",
									"         \"nome\":\"Curitiba\",",
									"         \"estado\":{  ",
									"            \"id\":267,",
									"            \"uf\":\"PR\",",
									"            \"nome\":\"Paraná\",",
									"            \"pais\":{  ",
									"               \"id\":31,",
									"               \"nome\":\"BRASIL\",",
									"               \"codBacen\":\"1058\",",
									"               \"codIso\":\"BRA\"",
									"            }",
									"         },",
									"         \"detalhe\":{  ",
									"            \"id\":3123",
									"         }",
									"      },",
									"      \"cep\":\"80230010\",",
									"      \"bairro\":\"Rebouças\",",
									"      \"logradouro\":\"Avenida Sete De Setembro\",",
									"      \"principal\":true",
									"   }",
									"}",
									"             )",
									"    }",
									"});",
									"",
									"//ENVIA O REQUEST DE CRIAR A PROPRIEDADE RURAL",
									"pm.sendRequest(pm.environment.get(\"echoGerarPropriedadeRural\"), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idPropriedadeRural\", jsonData.id);  ",
									"    //console.log(pm.environment.get(\"detalhePropriedade\"));",
									"    ",
									"        //GERA E ENVIA O REQUEST DE BUSCAR PROPRIEDADE RURAL",
									"        pm.sendRequest(echoPostRequestBuscarPropriedadeRural = {",
									"          url: pm.environment.get(\"url\")+'/core/api/propriedade-rural/'+pm.environment.get(\"idPropriedadeRural\"),",
									"          method: 'GET',",
									"          header: {",
									"            'X-AUTH-TOKEN': pm.environment.get(\"token\"),",
									"            'Content-Type':'application/json'",
									"          },",
									"        }, function (err, res) {",
									"            var jsonData = res.json();  ",
									"            jsonData.nome = \"Propriedade Rural Postman Alterada\";",
									"            pm.environment.set(\"detalhePropriedade\", JSON.stringify(jsonData));  ",
									"        }); ",
									"    ",
									"    ",
									"}); ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{detalhePropriedade}}"
						},
						"url": {
							"raw": "{{url}}/core/api/propriedade-rural",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"propriedade-rural"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Empresas",
			"item": [
				{
					"name": "Cadastra uma nova Empresa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5600886-b280-4fc2-85d1-8ef9c23a6949",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 201 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idEmpresa\", jsonData.id);",
									"    ",
									"    pm.expect(jsonData.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"telefones\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"enderecosWeb\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"contatos\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"pessoaFisicaApi\");",
									"    pm.expect(jsonData.pessoaApi.pessoaFisicaApi).to.have.property(\"sexo\");",
									"    pm.expect(jsonData.pessoaApi.pessoaFisicaApi).to.have.property(\"rg\");",
									"    pm.expect(jsonData.pessoaApi.pessoaFisicaApi).to.have.property(\"nascimento\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"codBacen\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"codIso\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"email\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"idContrato\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"    ",
									"    ",
									"",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c0ed1222-16b1-4868-ad2f-9c09673354f4",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"pm.environment.set(\"randomCPF\", utils.gerarCPF());",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"pessoaApi\":{\r\n      \"paisApi\":{\r\n         \"id\":31,\r\n         \"nome\":\"BRASIL\",\r\n         \"codBacen\":\"1058\",\r\n         \"codIso\":\"BRA\"\r\n      },\r\n      \"pessoaFisicaApi\":{\r\n         \"sexo\":\"M\",\r\n         \"rg\":\"23\",\r\n         \"nascimento\":\"1990-04-18T03:00:00.000Z\"\r\n      },\r\n      \"inscricaoFiscal\":{{randomCPF}},\r\n      \"nome\":\"Teste Postman Empresa\",\r\n      \"email\":\"empresapostman@gmail.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{url}}/core/api/empresas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"empresas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca uma Empresa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b7e2068-44db-482b-a564-eb99653976f5",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 6000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);",
									"});",
									"",
									"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
									"    var jsonData = pm.response.json();",
									"        pm.environment.set(\"idEmpresa\", jsonData.id);",
									"    ",
									"    pm.expect(jsonData.pessoaApi.inscricaoFiscal, 'Validação inscrição fiscal').to.eql(pm.environment.get(\"randomCPF\"));",
									"    pm.expect(jsonData).to.have.property(\"id\");",
									"    pm.expect(jsonData).to.have.property(\"pessoaApi\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"telefones\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"enderecos\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"enderecosWeb\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"contatos\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"pessoaFisicaApi\");",
									"    pm.expect(jsonData.pessoaApi.pessoaFisicaApi).to.have.property(\"sexo\");",
									"    pm.expect(jsonData.pessoaApi.pessoaFisicaApi).to.have.property(\"rg\");",
									"    pm.expect(jsonData.pessoaApi.pessoaFisicaApi).to.have.property(\"nascimento\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"inscricaoFiscal\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"paisApi\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"id\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"nome\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"codBacen\");",
									"    pm.expect(jsonData.pessoaApi.paisApi).to.have.property(\"codIso\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"email\");",
									"    pm.expect(jsonData.pessoaApi).to.have.property(\"detalhe\");",
									"    pm.expect(jsonData).to.have.property(\"ativo\");",
									"    pm.expect(jsonData).to.have.property(\"idContrato\");",
									"    pm.expect(jsonData).to.have.property(\"detalhe\");",
									"    ",
									"    ",
									"",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d173cbaa-bc4f-4745-9ad7-a83172e8a423",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"pm.environment.set(\"randomCPF\", utils.gerarCPF());",
									"",
									"//console.log(utils.gerarEmpresa());",
									"",
									"pm.sendRequest(utils.gerarEmpresa(), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idEmpresa\", jsonData.id);  ",
									"      ",
									"}); "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/core/api/empresas/{{idEmpresa}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"empresas",
								"{{idEmpresa}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar uma Empresa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8d903b9-9390-4508-8774-bfa776af12d2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7bbd636b-c16d-4284-92c8-e9b9d90043b7",
								"type": "text/javascript",
								"exec": [
									"let utils = eval(globals.loadUtils);",
									"",
									"pm.environment.set(\"randomCPF\", utils.gerarCPF());",
									"",
									"//console.log(utils.gerarEmpresa());",
									"",
									"pm.sendRequest(utils.gerarEmpresa(), function (err, res) {",
									"      ",
									"    console.log(err ? err : res.json());",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"idEmpresa\", jsonData.id);  ",
									"    jsonData.pessoaApi.nome = \"Empresa Postman Alterado\";",
									"    pm.environment.set(\"detalheEmpresa\", JSON.stringify(jsonData));  ",
									"    console.log(pm.environment.get(\"detalheEmpresa\"));       ",
									"}); "
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{detalheEmpresa}}"
						},
						"url": {
							"raw": "{{url}}/core/api/empresas/",
							"host": [
								"{{url}}"
							],
							"path": [
								"core",
								"api",
								"empresas",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Fiscalizacao",
			"item": [
				{
					"name": "CIDASC",
					"item": [
						{
							"name": "Enviar Receita CIDASC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c7091f15-2a2b-4609-ae30-66c274fb2508",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b4109a6d-4a36-4eb1-bab4-1b8c8063a686",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-AUTH-TOKEN",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"048013609\",\n    \"senha\": \"98435012\",\n    \"creaSC\": \"0853691\",\n    \"nrArt\": \"6716737-0\",\n    \"nrReceituario\": \"6790\",\n    \"nrRegistro\": 65,\n    \"dtEmissao\": \"2018-11-23\",\n    \"cdMunicipioIbge\": 4206405,\n    \"nrDocumentoProdutor\": \"00000000000\",\n    \"nmProdutor\": \"VALDIR BIANCHI\",\n    \"nmPropriedade\": \"VALDIR BIANCHI\",\n    \"cdLocalidade\": 101,\n    \"itens\": [\n        {\n            \"qdte\": 1,\n            \"area\": 2,\n            \"dose\": 5000,\n            \"nrIntervalo\": \"0\",\n            \"dsDiagnostico\": \"AGRIAO-DO-PASTO\",\n            \"dsModalidadeEpoca\": \"Pulverizar antes do plantio da cultura, quando as plantas infestantes estiverno periodo proximo e/ou durante a floracao.  \",\n            \"dsPrecaucao\": \"Nao aplicar na presenca de ventos acima de 10 km/h, em temperaturas acima de 28 oC e umidade relativa do ar minima de 55%. Chuva nas primeiras 4 horas apos a aplicacao pode diminuir a eficiencia do produto. Armazenar e manusear apenas em recipientes plasticos, fibra de vidro, aluminio ou aco inoxidavel. Nao armazenar a solucao herbicida em recipientes de ferro galvanizado, ferro ou aco comum. Utilize agua limpa (sem argilas em suspensao). Nao aplicar o produto com as folhas das plantas infestantes cobertas de poeira. Nao capinar ou rocar o mato antes ou logo apos aplicacao. Evitar o pastoreio ou ingestao de plantas daninhas por animais logo apos a aplicacao. A eficiencia do produto e visualizada entre o 4o e o 10o dia apos o tratamento. Nao tem acao sobre as sementes existentes no solo. \",\n            \"codMapaProduto\": \"00898793\",\n            \"codrelacao\": 30876\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/rec/api/fiscalizacao/cidasc/",
									"host": [
										"{{url}}"
									],
									"path": [
										"rec",
										"api",
										"fiscalizacao",
										"cidasc",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancelar Receita CIDASC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67ed4f33-d045-4eea-b3e0-37f3a376ed0a",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-AUTH-TOKEN",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"login\": \"048013609\",\r\n  \"senha\": \"98435012\",\r\n  \"nrRegistro\": 65,\r\n  \"creaSC\": \"0853691\",\r\n  \"nrArt\": \"6716737-0\",\r\n  \"nrReceituario\": \"6790\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/rec/api/fiscalizacao/cidasc/",
									"host": [
										"{{url}}"
									],
									"path": [
										"rec",
										"api",
										"fiscalizacao",
										"cidasc",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Busca Localidade Sigen",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51f619f8-43fe-4e17-97e8-731285c96b9c",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
											"});",
											"",
											"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.expect(jsonData[0]).to.have.property(\"codigo\");",
											"    pm.expect(jsonData[0]).to.have.property(\"nome\");",
											"    pm.expect(jsonData[0]).to.have.property(\"cidade\");",
											"    pm.expect(jsonData[0].cidade).to.have.property(\"id\");",
											"    pm.expect(jsonData[0].cidade).to.have.property(\"codIbge\");",
											"    pm.expect(jsonData[0].cidade).to.have.property(\"estado\");",
											"    pm.expect(jsonData[0].cidade.estado).to.have.property(\"id\");",
											"    pm.expect(jsonData[0].cidade.estado).to.have.property(\"uf\");",
											"    pm.expect(jsonData[0].cidade.estado).to.have.property(\"nome\");",
											"    pm.expect(jsonData[0].cidade.estado).to.have.property(\"pais\");",
											"    pm.expect(jsonData[0].cidade.estado.pais).to.have.property(\"id\");",
											"    pm.expect(jsonData[0].cidade.estado.pais).to.have.property(\"nome\");",
											"    pm.expect(jsonData[0].cidade.estado.pais).to.have.property(\"codBacen\");",
											"    pm.expect(jsonData[0].cidade.estado.pais).to.have.property(\"codIso\");",
											"    pm.expect(jsonData[0].cidade.estado.pais).to.have.property(\"detalhe\");",
											"    pm.expect(jsonData[0].cidade.estado).to.have.property(\"detalhe\");",
											"    pm.expect(jsonData[0].cidade).to.have.property(\"detalhe\");",
											"    pm.expect(jsonData[0].cidade).to.have.property(\"nome\");",
											"    pm.expect(jsonData[0]).to.have.property(\"detalhe\");",
											"",
											" ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-AUTH-TOKEN",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/core/api/localidade-sigen?idCidade=2776",
									"host": [
										"{{url}}"
									],
									"path": [
										"core",
										"api",
										"localidade-sigen"
									],
									"query": [
										{
											"key": "idCidade",
											"value": "2776"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Lista status de Fiscalizacao das receitas",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf304249-5e0d-436c-8dba-eef3dea5d3d1",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
											"});",
											"",
											"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.expect(jsonData).to.have.property(\"qtdade\");",
											"    pm.expect(jsonData).to.have.property(\"registros\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"id\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"numeroReceita\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"ART\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"dataEmissao\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"nomeRT\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"nomeProdutos\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"nomeCultura\");",
											"    pm.expect(jsonData.registros[0]).to.have.property(\"enviado\");",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-TOKEN",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n\t\"dataInicial\":\"2018-11-01\",\n\t\"dataFinal\":{{timestamp}},\n\t\"receitaInicial\":null,\n\t\"receitaFinal\":null,\n\t\"limite\":10,\n\t\"posicaoInicial\":0\n}\n"
								},
								"url": {
									"raw": "{{url}}/rec/api/fiscalizacao/listar-status",
									"host": [
										"{{url}}"
									],
									"path": [
										"rec",
										"api",
										"fiscalizacao",
										"listar-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Enviar Receita CIDASC Lote",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a7fd4339-c16d-4bc4-8fc8-6148e48d4005",
										"exec": [
											"let utils = eval(globals.loadUtils);",
											"",
											"",
											"pm.sendRequest(utils.gerarReceita(78798,25534), function (err, res) {",
											"  console.log(err ? err : res.json());",
											"  var jsonData = res.json();",
											"  pm.environment.set(\"idReceita\", jsonData[0].detalhe.id);",
											"",
											"});  ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "15cda2b4-c2ba-44aa-841c-0005dd7eed5e",
										"exec": [
											"let utils = eval(globals.loadUtils);",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
											"});",
											"",
											"",
											"(pm.response.code === 400 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.expect(jsonData[0].mensagem, 'Validação mensagem').to.contain(\"já foi enviada\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-AUTH-TOKEN",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[{{idReceita}}]"
								},
								"url": {
									"raw": "{{url}}/rec/api/fiscalizacao/cidasc/enviar-lote",
									"host": [
										"{{url}}"
									],
									"path": [
										"rec",
										"api",
										"fiscalizacao",
										"cidasc",
										"enviar-lote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Busca historico CIDASC por ID Receita",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5aefac2e-07bd-4459-964f-4729b581323c",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than \"+pm.environment.get(\"responseTimeLimit\"), function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(pm.environment.get(\"responseTimeLimit\"));",
											"});",
											"",
											"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.expect(jsonData[0]).to.have.property(\"dataEnvio\");",
											"    pm.expect(jsonData[0]).to.have.property(\"status\");",
											"    pm.expect(jsonData[0].mensagem, 'Validação mensagem').to.contain(\"informado\");",
											"",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-AUTH-TOKEN",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/rec/api/fiscalizacao/cidasc/status/{{idReceita}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"rec",
										"api",
										"fiscalizacao",
										"cidasc",
										"status",
										"{{idReceita}}"
									],
									"query": [
										{
											"key": "idReceita",
											"value": "96",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancelar Receita CIDASC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28f676a6-3708-4644-a4dc-1dc84500069f",
										"type": "text/javascript",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 6000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(6000);",
											"});",
											"",
											"(pm.response.code === 200 ? pm.test : pm.test.skip)(\"Data Entry Test\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status, 'Validação status').to.eql(\"CANCELADA\");",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-AUTH-TOKEN",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/rec/api/receitas/{{idReceita}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"rec",
										"api",
										"receitas",
										"{{idReceita}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}